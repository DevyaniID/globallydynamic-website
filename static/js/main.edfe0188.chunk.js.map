{"version":3,"sources":["assets/cover_image.png","assets/plugin_in_studio.png","assets/top_menu.png","assets/amazon.gif","assets/galaxy.gif","assets/huawei.gif","assets/apk_from_bundle.png","assets/upload_log.jpg","assets/flow_diagram.png","serviceWorker.ts","theme.ts","components/CodeBlock.tsx","utils/index.ts","components/NotFound.tsx","components/NestedNavListItem.tsx","components/DrawerPage.tsx","components/LinkRenderer.tsx","components/ImageRenderer.tsx","home/index.tsx","documentation/user/index.tsx","documentation/javadoc/index.tsx","assets/java.svg","assets/gradle.svg","assets/android_studio.svg","constants/index.ts","documentation/user/android/index.tsx","documentation/user/gradle/index.tsx","documentation/user/server/index.tsx","documentation/user/studio/index.tsx","components/Javadoc.tsx","documentation/javadoc/android/index.tsx","documentation/javadoc/server/index.tsx","documentation/index.tsx","userguide/getting-started/index.tsx","userguide/server/index.tsx","userguide/amazon-app-store/index.tsx","userguide/samsung-galaxy-store/index.tsx","userguide/huawei-app-gallery/index.tsx","userguide/troubleshooting/index.tsx","userguide/getting-started/development/index.tsx","userguide/getting-started/complete/index.tsx","userguide/firebase-app-distribution/index.tsx","userguide/index.tsx","components/header/Desktop.tsx","assets/menu_opened.svg","assets/menu_closed.svg","components/header/Mobile.tsx","components/header/index.tsx","release-notes/index.tsx","App.tsx","index.tsx","assets/tool_window.png"],"names":["module","exports","Boolean","window","location","hostname","match","unregister","navigator","serviceWorker","ready","then","registration","catch","error","console","message","theme","createMuiTheme","typography","fontSize","palette","primary","main","dark","secondary","red","A400","text","disabled","hint","background","default","paper","common","CodeBlock","language","value","findTop","element","y","offsetTop","offsetParent","useStyles","makeStyles","box","display","alignItems","justifyContent","textAlign","NotFound","classes","Box","className","width","innerHeight","height","Container","Typography","variant","listItem","color","listText","listIcon","fill","subList","transition","subListWrapper","overflow","NestedNavListItem","destination","pathPrefix","icon","url","childDestinations","indent","navigateOnParentMenuClick","useLocation","subListRef","useRef","history","useHistory","useState","subListHeight","setSubListHeight","fullUrl","length","selected","pathname","nestedPathSelected","indexOf","open","setOpen","listItemClassName","listTextClassName","listIconClassName","shouldRenderList","useEffect","newHeight","current","clientHeight","replace","ListItem","button","style","paddingLeft","to","state","from","onClick","e","stopPropagation","preventDefault","component","Link","ListItemIcon","React","cloneElement","ListItemText","ExpandLess","ExpandMore","List","disablePadding","ref","map","nestedListItemClassName","nestedListTextClassName","nestedListIconClassName","key","drawerPageContainer","drawer","flexShrink","DrawerPageContext","createContext","DrawerPage","destinations","useRouteMatch","nav","useTheme","sectionRef","navTop","setNavTop","pageHeight","setPageHeight","minWidth600","useMediaQuery","newNavTop","updatePageHeight","newPageHeight","Math","max","scrollHeight","minHeight","spacing","Provider","TransitionGroup","CSSTransition","classNames","timeout","flatMap","concat","exact","DestinationComponent","path","youtube","LinkRenderer","children","href","isYoutube","isLocal","Consumer","handleHeight","videoId","split","rel","target","ImageRenderer","alt","src","onLoad","maxWidth","maxHeight","markdown","CoverImage","Home","escapeHtml","source","renderers","code","link","image","UserDocs","mt","Javadoc","_extends","Object","assign","i","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","title","props","viewBox","undefined","ForwardRef","forwardRef","id","pageNames","versions","Android","Gradle","Server","StudioInPlugin","ToolWindow","TopMenu","Studio","setHeight","top","frameBorder","border","documentationDestinations","Person","Cloud","AndroidJavadoc","ServerJavadoc","childDestination","Documentation","document","documentElement","scrollTop","GettingStarted","AmazonGif","AmazonAppStore","GalaxyGif","SamsungGalaxyStore","HuaweiGif","HuaweiAppGallery","Troubleshooting","FlowDiagram","ApkFromBundle","UploadLog","Development","Complete","FirebaseAppDistribution","userGuideDestinations","UserGuide","userSelect","appBar","zIndex","appBarContent","githubButton","marginLeft","githubIcon","drawerPaper","toolbar","mixins","arrow","marginRight","tabPanel","paddingTop","paddingBottom","TabPanel","index","other","role","hidden","aria-labelledby","fontWeight","letterSpacing","lineHeight","Desktop","selectedLocation","locations","marginTop","setMarginTop","appBarRef","locationText","tabIndex","findIndex","item","panelTextFromPath","ArrowForwardIos","newMarginTop","AppBar","position","Tabs","Tab","label","a11yProps","IconButton","GitHub","attributeName","dur","keyTimes","values","menuButton","flexGrow","padding","expand","alignSelf","DrawerListItem","setDrawerOpen","setTitle","paddingRight","flexDirection","Mobile","Toolbar","edge","aria-label","Drawer","root","Description","School","NewReleases","Header","find","loc","endsWith","substr","CssBaseline","ReleaseNotes","headerStyles","reduce","acc","curr","marginBottom","left","App","pathSegments","pageName","ReactGA","pageview","join","initialize","debug","process","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.edfe0188.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover_image.bc667871.png\";","module.exports = __webpack_public_path__ + \"static/media/plugin_in_studio.c5b287b7.png\";","module.exports = __webpack_public_path__ + \"static/media/top_menu.31294fd1.png\";","module.exports = __webpack_public_path__ + \"static/media/amazon.680953bf.gif\";","module.exports = __webpack_public_path__ + \"static/media/galaxy.36bb7afa.gif\";","module.exports = __webpack_public_path__ + \"static/media/huawei.58134ee8.gif\";","module.exports = __webpack_public_path__ + \"static/media/apk_from_bundle.763bf138.png\";","module.exports = __webpack_public_path__ + \"static/media/upload_log.b6be3a25.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flow_diagram.9f33017e.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {red} from '@material-ui/core/colors';\nimport {createMuiTheme} from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    typography: {\n        fontSize: 16\n    },\n    palette: {\n        primary: {\n            main: '#436b78',\n            dark: '#4b7786',\n        },\n        secondary: {\n            main: '#debd74',\n        },\n        error: {\n            main: red.A400,\n        },\n        text: {\n            primary: '#555555',\n            secondary: '#ddd',\n            disabled: 'yellow',\n            hint: '#debd74'\n        },\n        background: {\n            default: '#fff',\n            paper: '#436b78'\n        },\n        common: {}\n        // action: {\n        //     selected:\n        // }\n    }\n});\n\nexport default theme;\n","import React from \"react\";\nimport {Prism as SyntaxHighlighter} from \"react-syntax-highlighter\"\n\nexport type CodeBlockProps = { language: string; value: string; }\n\nconst CodeBlock = ({language, value}: CodeBlockProps) => {\n    return (\n        <SyntaxHighlighter language={language}>\n            {value}\n        </SyntaxHighlighter>\n    );\n};\n\nexport default CodeBlock;\n","export function findTop(element: HTMLElement | null) {\n    let y = 0;\n    while (element) {\n        y += element.offsetTop;\n        element = element.offsetParent as HTMLElement;\n    }\n    return y;\n}\n","import React from \"react\";\nimport {Box, Container, Typography} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    box: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    text: {\n        textAlign: \"center\"\n    }\n}));\n\nconst NotFound = () => {\n    const classes = useStyles();\n    return (\n        <Box className={classes.box} width={window.innerHeight} height={window.innerHeight}>\n            <Container>\n                <Typography variant={\"h3\"} className={classes.text}>\n                    Oops..\n                </Typography>\n                <Typography variant={\"h6\"} className={classes.text}>\n                    Looks like the page you are looking for does not exist\n                </Typography>\n            </Container>\n        </Box>\n    )\n};\n\nexport default NotFound;\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {List, ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\nimport {ExpandLess, ExpandMore} from \"@material-ui/icons\";\nimport {DrawerPageDestination} from \"./DrawerPage\";\n\nconst useStyles = makeStyles(theme => ({\n    listItem: {\n        '& .MuiTouchRipple-root': {\n            color: theme.palette.text.secondary,\n        }\n    },\n    listText: {\n        color: theme.palette.text.secondary,\n        '&.selected': {\n            color: theme.palette.text.hint\n        }\n    },\n    listIcon: {\n        fill: theme.palette.text.secondary,\n        '&.selected': {\n            fill: theme.palette.text.hint\n        }\n    },\n    subList: {\n        transition: \"height 250ms linear\",\n    },\n    subListWrapper: {\n        overflow: \"hidden\"\n    }\n}));\n\nexport type NestedNavListProps = {\n    navigateOnParentMenuClick: boolean;\n    destination: DrawerPageDestination;\n    indent: number;\n}\n\nlet animationTimeout;\n\nexport const NestedNavListItem = (\n    {\n        destination: {pathPrefix, text, icon, url, childDestinations},\n        indent,\n        navigateOnParentMenuClick\n    }: NestedNavListProps\n) => {\n    const classes = useStyles();\n    const location = useLocation();\n    const subListRef = useRef<HTMLDivElement>(null);\n    const history = useHistory();\n    const [subListHeight, setSubListHeight] = useState(0);\n    const fullUrl = `${pathPrefix}${url.length > 0 ? \"/\" : \"\"}${url}`\n    const selected = (!(!!url) && pathPrefix === location.pathname)\n        || (!!url && location.pathname === fullUrl);\n    const nestedPathSelected = (!(!!url) && pathPrefix === location.pathname)\n        || (!!url && location.pathname.indexOf(fullUrl) !== -1);\n    const [open, setOpen] = useState(selected || nestedPathSelected);\n\n    const listItemClassName = `${classes.listItem}${selected ? \" selected\" : \"\"}`\n    const listTextClassName = `${classes.listText}${selected ? \" selected\" : \"\"}`\n    const listIconClassName = `${classes.listIcon}${selected ? \" selected\" : \"\"}`\n    const shouldRenderList = !navigateOnParentMenuClick || (childDestinations && nestedPathSelected)\n\n    useEffect(() => {\n        const newHeight = subListRef.current?.clientHeight || 0;\n        if (newHeight > subListHeight) {\n            setSubListHeight(newHeight)\n        }\n        if (selected && childDestinations) {\n            history.replace(childDestinations[0].url || \"\")\n        }\n    });\n\n    useEffect(() => {\n        setOpen(selected || nestedPathSelected);\n    }, [selected, nestedPathSelected])\n\n    return (\n        <>\n            <ListItem button\n                      style={{paddingLeft: indent}}\n                      selected={selected}\n                      className={listItemClassName}\n                      to={{pathname: fullUrl, state: {from: location.pathname}}}\n                      onClick={navigateOnParentMenuClick\n                          ? () => {\n                          }\n                          : (e: React.SyntheticEvent) => {\n                              setOpen(!open);\n                              e.stopPropagation();\n                              e.preventDefault();\n                          }\n                      }\n                      component={navigateOnParentMenuClick ? Link : \"div\"}>\n                {icon\n                    ?\n                    <ListItemIcon className={listIconClassName}>\n                        {React.cloneElement(icon, {className: listIconClassName})}\n                    </ListItemIcon>\n                    : <></>\n                }\n                <ListItemText className={listTextClassName} primary={text}/>\n                {childDestinations ?\n                    open\n                        ? <ExpandLess className={listIconClassName}/>\n                        : <ExpandMore className={listIconClassName}/>\n                    : <></>\n                }\n            </ListItem>\n            <div className={classes.subListWrapper}>\n                <List style={{\n                    height: open && shouldRenderList && subListHeight > 0\n                        ? subListHeight\n                        : subListHeight <= 0\n                            ? 'auto'\n                            : 0\n                }}\n                      component=\"div\"\n                      disablePadding\n                      className={classes.subList}\n                      ref={subListRef}>\n                    {\n                        (childDestinations || []).map(({text, icon, url}) => {\n                            const fullUrl = `${pathPrefix}${url.length > 0 ? \"/\" : \"\"}${url}`\n                            const nestedPathSelected = (!(!!url) && pathPrefix === location.pathname)\n                                || (!!url && location.pathname.indexOf(fullUrl) !== -1);\n\n                            const nestedListItemClassName = `${classes.listItem}${nestedPathSelected ? \" selected\" : \"\"}`\n                            const nestedListTextClassName = `${classes.listText}${nestedPathSelected ? \" selected\" : \"\"}`\n                            const nestedListIconClassName = `${classes.listIcon}${nestedPathSelected ? \" selected\" : \"\"}`\n\n                            return (\n                                <ListItem button\n                                          className={nestedListItemClassName}\n                                          style={{paddingLeft: indent * 2}}\n                                          key={url}\n                                          selected={nestedPathSelected}\n                                          to={{\n                                              pathname: fullUrl,\n                                              state: {from: location.pathname}\n                                          }}\n                                          component={Link}>\n                                    {icon ? <ListItemIcon className={nestedListIconClassName}>\n                                        {React.cloneElement(icon, {className: nestedListIconClassName})}\n                                    </ListItemIcon> : <></>}\n                                    <ListItemText\n                                        className={nestedListTextClassName}\n                                        primary={text}/>\n                                </ListItem>\n                            );\n                        })\n                    }\n                </List>\n            </div>\n        </>\n    )\n}\n\nexport default NestedNavListItem;\n","import React, {ReactElement, useEffect, useRef, useState} from \"react\";\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\nimport {Route, useLocation, useRouteMatch} from \"react-router-dom\";\nimport {Box, List, useMediaQuery} from \"@material-ui/core\";\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\nimport {Switch} from \"react-router\";\nimport {findTop} from \"../utils\";\nimport NotFound from \"./NotFound\";\nimport NestedNavListItem from \"./NestedNavListItem\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    drawerPageContainer: {\n        display: \"flex\",\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        background: theme.palette.primary.dark\n    },\n}));\n\nexport type DrawerPageDestination = {\n    text: string;\n    url: string;\n    pathPrefix: string;\n    exact?: boolean;\n    icon?: ReactElement;\n    component: React.ComponentType;\n    childDestinations?: DrawerPageDestination[];\n}\n\nexport type DrawerPageProps = {\n    destinations: DrawerPageDestination[];\n}\n\nexport const DrawerPageContext = React.createContext(() => {\n})\n\nconst DrawerPage = ({destinations}: DrawerPageProps) => {\n    const classes = useStyles();\n    const location = useLocation();\n    const match = useRouteMatch();\n    const nav = useRef(null);\n    const theme = useTheme();\n    const sectionRef = useRef<HTMLElement>(null);\n    const [navTop, setNavTop] = useState(0);\n    const [pageHeight, setPageHeight] = useState(0);\n    const minWidth600 = useMediaQuery('(min-width:600px)');\n\n    useEffect(() => {\n        const newNavTop = findTop(nav.current)\n        if (newNavTop !== navTop) {\n            setNavTop(newNavTop);\n        }\n\n        updatePageHeight();\n    });\n\n    const updatePageHeight = () => {\n        const newPageHeight = Math.max(sectionRef.current?.scrollHeight || pageHeight, window.innerHeight - navTop)\n        if (newPageHeight !== pageHeight) {\n            setPageHeight(newPageHeight);\n        }\n    }\n\n    return (\n        <Box className={classes.drawerPageContainer} width=\"100%\">\n            {minWidth600\n                ? <List {...{ref: nav}}\n                        component=\"nav\"\n                        className={classes.drawer}\n                        style={{minHeight: pageHeight}}>\n                    {destinations.map(destination =>\n                        <NestedNavListItem key={destination.url}\n                                           indent={theme.spacing(2)}\n                                           navigateOnParentMenuClick={true}\n                                           destination={destination}/>)}\n                </List>\n                : <></>\n            }\n            <DrawerPageContext.Provider value={updatePageHeight}>\n                <Box width=\"100%\">\n                    <TransitionGroup className=\"transition-group\">\n                        <CSSTransition key={location.key} classNames=\"fade\" timeout={250}>\n                            <section className=\"route-section\" ref={sectionRef}>\n                                <Switch location={location}>\n                                    {\n                                        destinations.flatMap(destination =>\n                                            [destination].concat(destination.childDestinations || []))\n                                            .map(({url, exact, component: DestinationComponent}) => {\n                                                const fullUrl = `${match.path}${url.length > 0 ? \"/\" : \"\"}${url}`\n                                                return <Route key={fullUrl} exact={exact || !url.length} path={fullUrl}\n                                                              component={DestinationComponent}/>\n                                            })\n                                    }\n                                    <Route component={NotFound}/>\n                                </Switch>\n                            </section>\n                        </CSSTransition>\n                    </TransitionGroup>\n                </Box>\n            </DrawerPageContext.Provider>\n        </Box>\n    )\n};\n\nexport default DrawerPage;\n","import React, {ReactNode} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport YouTube from \"react-youtube\";\nimport {DrawerPageContext} from \"./DrawerPage\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport ResizeDetector from 'react-resize-detector';\nimport ReactResizeDetector from \"react-resize-detector\";\n\nconst useStyles = makeStyles(theme => ({\n    youtube: {\n        width: '100%'\n    }\n}));\n\nconst LinkRenderer = ({children, href}: { children: ReactNode, href: string; }) => {\n    const classes = useStyles();\n    const isYoutube = !!href.match(\"youtube.com\")\n    const isLocal = !(!!href.match(\"https?://.+\"))\n    return (\n        <DrawerPageContext.Consumer>\n            {updatePageHeight =>\n                isYoutube ?\n                    <ResizeDetector handleHeight={true}>\n                        {() => {\n                            updatePageHeight();\n                            return <YouTube className={classes.youtube} videoId={href.split(\"?v=\")[1]}/>\n                        }}\n                    </ResizeDetector>\n                    : isLocal ? <Link to={href}>{children}</Link> :\n                    <a rel=\"noopener noreferrer\" target=\"_blank\" href={href}>{children}</a>\n            }\n        </DrawerPageContext.Consumer>\n    );\n}\n\nexport default LinkRenderer;\n","import React from \"react\";\nimport {DrawerPageContext} from \"./DrawerPage\";\n\nconst ImageRenderer = ({alt, src}: any) => {\n    return (\n        <DrawerPageContext.Consumer>\n            {updatePageHeight =>\n                <img onLoad={() => updatePageHeight()} alt={alt} src={src}\n                     style={{maxWidth: '100%', maxHeight: '100%'}}/>}\n        </DrawerPageContext.Consumer>\n    )\n}\n\nexport default ImageRenderer;\n","import React from 'react';\nimport CoverImage from \"../assets/cover_image.png\";\nimport {Box, Container} from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport CodeBlock from \"../components/CodeBlock\";\nimport LinkRenderer from \"../components/LinkRenderer\";\nimport ImageRenderer from \"../components/ImageRenderer\";\n\nconst markdown = `\n<span></span><div style=\"text-align:center;\">![GloballyDynamic](${CoverImage})</div>\n\n**A set of tools geared towards making [Dynamic Delivery](https://developer.android.com/guide/app-bundle/dynamic-delivery) universally available, regardless of underlying \nApp Store / distribution platform, while also providing a single unified Android client API and a streamlined developer experience.\n<br/><br/>Currently supported platforms include:**\n* Google Play Store ([Play Feature Delivery](https://developer.android.com/guide/app-bundle/dynamic-delivery))\n* Huawei App Gallery ([Dynamic Ability](https://developer.huawei.com/consumer/en/doc/development/AppGallery-connect-Guides/agc-featuredelivery-introduction))\n* Most other platforms in combination with [GloballyDynamic Server](/docs/user/server) (e.g. Amazon App Store, Samsung Galaxy Store, Firebase App Distribution or during local development)\n\nWhy?\n---\nDynamic delivery is great, it can go a long way towards saving device storage space as well as network consumption for users. \nHowever, adopting it can pose a few problems:\n* If you want to leverage capabilities such as on-demand Dynamic Feature Modules for multiple platforms, you have to provide a \n*separate client side integration for each app store you distribute through that supports dynamic delivery* - with current trends pointing towards an increasingly scattered landscape of app stores \n(e.g. Huawei and Amazon devices come without Play Store installed), the problem is likely to get magnified in the future.\n\n* Many app stores / distribution platforms do not support app bundles (e.g. Amazon App Store, Samsung Galaxy Store, \nFirebase App Distribution), if you distribute through any of these you are unable to make use of dynamic delivery. \n\n* It can not be used if your device does not have an app store with native support for dynamic delivery installed, \ne.g. emulators w/o Google Play, custom devices or Amazon Fire devices.\n\nGloballyDynamic provides the tools and infrastructure necessary to address these issues.\n\nKey capabilities\n---\n* **Unified client API**: write once, run with any platform supporting dynamic delivery. The \n[Android Library](/docs/user/android) comes in different flavors that each expose an identical API, but delegate to a \ndifferent underlying app store client API (e.g Play Core or Dynamic Ability)\n\n* **Dynamic delivery for app stores without support for app bundles**: e.g. Samsung Galaxy Store, \nAmazon App Store. This is made available by interplay between [GloballyDynamic Server](/docs/user/server), \nthe [Android Library](/docs/user/android) and the [Gradle Plugin](/docs/user/gradle).\n\n* **Dynamic delivery during development**: download and install split APK:s (Dynamic feature APK:s, configuration APK:s etc.) \nfrom a server running locally in Android Studio during development, without having to upload bundles to a distribution \nplatform (e.g. Google Play or Huawei App Gallery) or manually build/install splits to your device. Made available by the\n[Android Studio Plugin](/docs/user/studio)\n\n* **Dynamic delivery with any device**: utilize dynamic delivery for devices that do not have an app store with dynamic delivery support installed (e.g. emulators w/o Google Play or custom devices).\n\n* **Dynamic delivery for internal builds**: utilize dynamic delivery for internally distributed builds, e.g. builds distributed through [Firebase App Distribution](https://firebase.google.com/docs/app-distribution), before they get promoted to other distribution platforms.\n\n* **Ease of testing various install scenarios during development**: quickly iterate and test install scenarios such as:\n    * Slow download speeds: configure dev server to throttle downloads of split APK:s\n    * Broken server connection: toggle on/off the dev server to test failing connections\n    * Cancellation of installs: cancel ongoing installations through system notifications \n    * Multiple install sessions: run multiple install sessions during development\n\nGetting started\n---\n* Follow the [User Guide](/user-guide)\n\nCode\n---\n* [https://github.com/jeppeman/GloballyDynamic](https://github.com/jeppeman/GloballyDynamic)\n\nDocs\n---\n* [User docs](/docs/user)\n* [Javadoc](/docs/javadoc)\n\nRelease notes\n---\n* [Release notes](/release-notes)\n\nSupport\n---\nIf you encounter problems, or have questions, drop an [issue](https://github.com/jeppeman/GloballyDynamic/issues) on GitHub.\n`\n\nconst Home = () => {\n    return (\n        <Box>\n            <Container>\n                <ReactMarkdown\n                    escapeHtml={false}\n                    source={markdown}\n                    renderers={\n                        {\n                            code: CodeBlock,\n                            link: LinkRenderer,\n                            image: ImageRenderer\n                        }\n                    }/>\n            </Container>\n        </Box>\n    );\n}\n\nexport default Home\n","import React from \"react\"\nimport {Container, Typography, Box} from \"@material-ui/core\";\n\nconst UserDocs = () => {\n    return (\n        <Box mt={2}>\n            <Container>\n                <Typography>\n                    A set of tools that work in concert to enable Dynamic Delivery anywhere, as well as providing a\n                    unified client API regardless of underlying distribution platform.\n                    Currently supported platforms include:\n                </Typography>\n            </Container>\n        </Box>\n    )\n}\n\nexport default UserDocs;\n","import React from \"react\"\nimport {Box, Container, Typography} from \"@material-ui/core\";\n\nconst Javadoc = () => {\n    return (\n        <Box mt={2}>\n            <Container>\n                <Typography>Hello there, here is some javadoc</Typography>\n            </Container>\n        </Box>\n    )\n}\n\nexport default Javadoc;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"java\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.801 24.747c0 0-1.223 0.712 0.871 0.952 2.536 0.291 3.832 0.249 6.625-0.281 0 0 0.736 0.461 1.761 0.861-6.265 2.684-14.177-0.157-9.257-1.532zM11.035 21.244c0 0-1.371 1.015 0.723 1.232 2.709 0.279 4.848 0.303 8.551-0.411 0 0 0.512 0.519 1.316 0.803-7.572 2.215-16.009 0.173-10.589-1.624zM17.488 15.3c1.544 1.777-0.405 3.377-0.405 3.377s3.919-2.024 2.119-4.557c-1.681-2.363-2.971-3.536 4.009-7.584 0-0.001-10.955 2.735-5.723 8.764zM25.773 27.339c0 0 0.905 0.745-0.996 1.321-3.616 1.096-15.051 1.425-18.225 0.044-1.141-0.497 1-1.187 1.672-1.331 0.703-0.152 1.104-0.124 1.104-0.124-1.271-0.895-8.208 1.756-3.524 2.516 12.773 2.071 23.283-0.933 19.969-2.427zM12.389 17.613c0 0-5.816 1.381-2.059 1.883 1.585 0.212 4.748 0.164 7.693-0.083 2.408-0.203 4.824-0.636 4.824-0.636s-0.849 0.363-1.464 0.783c-5.905 1.553-17.315 0.831-14.029-0.757 2.776-1.341 5.035-1.189 5.035-1.189zM22.821 23.445c6.004-3.12 3.228-6.119 1.291-5.713-0.473 0.099-0.687 0.184-0.687 0.184s0.176-0.276 0.513-0.396c3.833-1.348 6.781 3.975-1.237 6.083 0-0.001 0.093-0.083 0.12-0.157zM19.201 0c0 0 3.325 3.325-3.153 8.44-5.195 4.103-1.184 6.443-0.001 9.115-3.032-2.737-5.257-5.144-3.765-7.385 2.192-3.292 8.263-4.887 6.92-10.169zM12.979 31.899c5.763 0.369 14.612-0.204 14.821-2.931 0 0-0.403 1.033-4.763 1.855-4.917 0.925-10.985 0.817-14.583 0.224 0-0.001 0.737 0.609 4.524 0.852z\"\n});\n\nvar SvgJava = function SvgJava(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgJava, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/java.87ade2c4.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"surface1\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M 30.25 1.519531 C 28.316406 -0.457031 25.199219 -0.511719 23.203125 1.394531 C 23.105469 1.488281 23.050781 1.621094 23.050781 1.757812 C 23.050781 1.894531 23.105469 2.027344 23.203125 2.121094 L 23.816406 2.761719 C 23.984375 2.933594 24.253906 2.953125 24.449219 2.804688 C 25.664062 1.808594 27.433594 1.976562 28.453125 3.179688 C 29.476562 4.378906 29.390625 6.195312 28.253906 7.289062 C 24.230469 11.402344 18.859375 -0.128906 6.667969 5.8125 C 6.253906 6.015625 5.9375 6.390625 5.804688 6.839844 C 5.667969 7.292969 5.722656 7.78125 5.957031 8.1875 L 8.050781 11.882812 C 8.5 12.6875 9.5 12.964844 10.289062 12.511719 L 10.335938 12.484375 L 10.296875 12.511719 L 11.214844 11.988281 C 12.25 11.332031 13.226562 10.585938 14.136719 9.761719 C 14.320312 9.589844 14.601562 9.578125 14.800781 9.742188 C 14.902344 9.828125 14.964844 9.960938 14.96875 10.097656 C 14.972656 10.238281 14.917969 10.371094 14.820312 10.46875 C 13.863281 11.347656 12.832031 12.144531 11.738281 12.839844 L 11.707031 12.839844 L 10.777344 13.371094 C 10.386719 13.59375 9.945312 13.710938 9.496094 13.710938 C 8.550781 13.714844 7.671875 13.199219 7.199219 12.363281 L 5.21875 8.871094 C 1.433594 11.625 -0.886719 16.914062 0.371094 23.613281 C 0.414062 23.847656 0.609375 24.015625 0.84375 24.019531 L 3.074219 24.019531 C 3.328125 24.023438 3.542969 23.828125 3.566406 23.566406 C 3.785156 21.890625 5.183594 20.632812 6.839844 20.632812 C 8.492188 20.632812 9.894531 21.890625 10.109375 23.566406 C 10.140625 23.8125 10.34375 24 10.585938 24 L 12.765625 24 C 13.007812 24 13.214844 23.8125 13.242188 23.566406 C 13.460938 21.890625 14.859375 20.632812 16.515625 20.632812 C 18.171875 20.632812 19.570312 21.890625 19.785156 23.566406 C 19.816406 23.8125 20.019531 24 20.261719 24 L 22.429688 24 C 22.695312 24 22.910156 23.785156 22.914062 23.511719 C 22.960938 20.390625 23.785156 16.800781 26.136719 15 C 34.269531 8.777344 32.132812 3.445312 30.25 1.519531 Z M 21.953125 10.917969 L 20.402344 10.121094 C 20.402344 9.652344 20.71875 9.246094 21.167969 9.148438 C 21.617188 9.046875 22.074219 9.28125 22.261719 9.710938 C 22.449219 10.136719 22.324219 10.640625 21.953125 10.921875 Z M 21.953125 10.917969 \"\n}));\n\nvar SvgGradle = function SvgGradle(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"32px\",\n    height: \"32px\",\n    viewBox: \"0 0 32 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGradle, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/gradle.1f8beabd.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,2H13V4H13.5A1.5,1.5 0 0,1 15,5.5V9L14.56,9.44L16.2,12.28C17.31,11.19 18,9.68 18,8H20C20,10.42 18.93,12.59 17.23,14.06L20.37,19.5L20.5,21.72L18.63,20.5L15.56,15.17C14.5,15.7 13.28,16 12,16C10.72,16 9.5,15.7 8.44,15.17L5.37,20.5L3.5,21.72L3.63,19.5L9.44,9.44L9,9V5.5A1.5,1.5 0 0,1 10.5,4H11V2M9.44,13.43C10.22,13.8 11.09,14 12,14C12.91,14 13.78,13.8 14.56,13.43L13.1,10.9H13.09C12.47,11.5 11.53,11.5 10.91,10.9H10.9L9.44,13.43M12,6A1,1 0 0,0 11,7A1,1 0 0,0 12,8A1,1 0 0,0 13,7A1,1 0 0,0 12,6Z\"\n});\n\nvar SvgAndroidStudio = function SvgAndroidStudio(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"mdi-android-studio\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgAndroidStudio, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/android_studio.e2d3f4a8.svg\";\nexport { ForwardRef as ReactComponent };","const pageNames: { [key: string]: string[] } = {\n    '/docs/user': ['Docs', 'Android'],\n    '/docs/user/android': ['Documentation', 'Android Lib'],\n    '/docs/user/server': ['Documentation', 'Server Lib'],\n    '/docs/user/gradle': ['Documentation', 'Gradle Plugin'],\n    '/docs/user/studio': ['Documentation', 'Studio Plugin'],\n    '/docs/javadoc/android': ['Javadoc', 'Android Lib'],\n    '/docs/javadoc/server': ['Javadoc', 'Server Lib'],\n    '/user-guide/getting-started/development': ['User Guide', 'Getting Started', 'Development Setup'],\n    '/user-guide/getting-started/complete': ['User Guide', 'Getting Started', 'Complete Setup'],\n    '/user-guide/server': ['User Guide', 'Dedicated Server'],\n    '/user-guide/amazon-app-store': ['User Guide', 'Amazon App Store'],\n    '/user-guide/samsung-galaxy-store': ['User Guide', 'Samsung Galaxy Store'],\n    '/user-guide/huawei-app-gallery': ['User Guide', 'Huawei App Gallery'],\n    '/user-guide/firebase-app-distribution': ['User Guide', 'Firebase App Distribution'],\n    '/user-guide/troubleshooting': ['User Guide', 'Troubleshooting']\n}\n\nexport type Versions = { AGP: string, GRADLE: string, ANDROID: string, SERVER: string, STUDIO: string }\n\nconst versions: Versions = {\n    'GRADLE': '1.4.0',\n    'ANDROID': '1.1.0',\n    'SERVER': '1.2.0',\n    'STUDIO': '1.5.0',\n    'AGP': '7.2.1'\n}\n\nexport {\n    pageNames,\n    versions\n}\n","import React from \"react\"\nimport {Box, Container} from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport CodeBlock from \"../../../components/CodeBlock\"\nimport LinkRenderer from \"../../../components/LinkRenderer\";\nimport {versions} from \"../../../constants\";\n\nconst markdown = `\n# GloballyDynamic Android Library\n\n<!-- [![Maven Central](https://img.shields.io/maven-central/v/com.jeppeman.globallydynamic.android/all.svg?label=maven%20central&color=green)](https://search.maven.org/search?q=g:%22com.jeppeman.globallydynamic.android%22) -->\n[![Maven Central](https://img.shields.io/badge/maven--central-v${versions.ANDROID}-green)](https://search.maven.org/search?q=g:%22com.jeppeman.globallydynamic.android%22)\n\nAn Android library that adds an abstraction layer on top of dynamic delivery client API:s, e.g. \n[Play Core](https://developer.android.com/guide/playcore), \n[Dynamic Ability](https://developer.huawei.com/consumer/en/doc/development/AppGallery-connect-Guides/agc-featuredelivery-initsdk)\nin order to provide a unified API regardless of underlying distribution platform. The library also has a\ndynamic delivery client implementation of it's own that interacts with [GloballyDynamic Servers](/docs/user/server).\n\nCurrently supported App Stores / Distribution platforms include:\n* Google Play Store ([Dynamic Delivery](https://developer.android.com/guide/app-bundle/dynamic-delivery))\n* Huawei App Gallery ([Dynamic Ability](https://developer.huawei.com/consumer/en/doc/development/AppGallery-connect-Guides/agc-featuredelivery-introduction))\n* Most other App Stores in combination with [GloballyDynamic Server](./server) (e.g. Amazon App Store, Samsung Galaxy Store)\n\nThe library comes with a different artifact for each underlying app store, the way you configure which one to use\nis through build variants. \nAll of these artifacts expose the same API to consumers, it pretty much mirrors the API of [Play Core Library](https://developer.android.com/guide/playcore)\nand delegates to the underlying app store's client API:s, e.g. \\`com.jeppeman.globallydynamic.android:gplay\\` delegates\nto Play Core, \\`com.jeppeman.globallydynamic.android:huawei\\` delegates to Dynamic Ability, \n\\`com.jeppeman.globallydynamic.android:selfhosted\\` delegates to the implementation that interacts with a GloballyDynamic\nServer, etc.\n\nCode\n---\n[https://github.com/jeppeman/GloballyDynamic/tree/master/globallydynamic-android-lib](https://github.com/jeppeman/GloballyDynamic/tree/master/globallydynamic-android-lib)\n\nUsage\n---\n### Gradle\n\\`\\`\\`groovy\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    // Use for Google Play variants\n    gplayImplementation 'com.jeppeman.globallydynamic.android:gplay:${versions.ANDROID}'\n    \n    // Use for Huawei App Gallery variants\n    huaweiImplementation 'com.jeppeman.globallydynamic.android:huawei:${versions.ANDROID}'\n    \n    // Use for other variants, e.g. during development or distribution through some other App Store\n    selfHostedImplementation 'com.jeppeman.globallydynamic.android:selfhosted:${versions.ANDROID}'\n}\n\\`\\`\\`\n**Snapshots**\n\\`\\`\\`groovy\nrepositories {\n    maven {\n        url 'https://oss.sonatype.org/content/repositories/snapshots/'    \n    }\n}\n\\`\\`\\`\nSee the [Gradle Plugin](./gradle) for more configuration details.\n\n### Enable GlobalSplitCompat \nIn order for your app to access code and resources from a downloaded module you need to enable GlobalSplitCompat as \nillustrated below.\n\\`\\`\\`kotlin\nimport com.jeppeman.globallydynamic.globalsplitcompat.GlobalSplitCompatApplication\n\nclass MyApplication : GlobalSplitCompatApplication()\n\n// OR\n\nimport com.jeppeman.globallydynamic.globalsplitcompat.GlobalSplitCompat\n\nclass MyApplication : Application() {\n    override fun attachBaseContext(base: Context) {\n        super.attachBaseContext(base)\n        GlobalSplitCompat.install(this)\n    }\n}\n\n// FOR INSTALLED ACTIVITIES\nclass MyActivity : AppCompatActivity() {\n    override fun attachBaseContext(base: Context) {\n        super.attachBaseContext(base)\n        GlobalSplitCompat.installActivity(this)\n    }\n}\n\\`\\`\\`\n\n### Make a request to download on demand modules (dynamic features, languages)\n\\`\\`\\`kotlin\nval globalSplitInstallManager: GlobalSplitInstallManager = GlobalSplitInstallManagerFactory.create(context)\n\nval request = GlobalSplitInstallRequest.newBuilder()\n    .addModule(\"myDynamicFeature\")\n    .addModule(\"myDynamicFeature2\")\n    .addLanguage(Locale.forLanguageTag(\"DE\"))\n    .build()\n\nglobalSplitInstallManager.startInstall(request)\n    // When a request is accepted, a session id is generated\n    // that you can use to monitor your request\n    .addOnSuccessListener { sessionId -> ...  }\n    // Use this listener to handle errors any errors encountered\n    // during the request\n    .addOnFailureListener { exception -> ... }\n\\`\\`\\`\n\n### Deferred module installation\n\\`\\`\\`kotlin\n// Features\nglobalSplitInstallManager.deferredInstall(\"myDynamicFeature\", \"myDynamicFeature2\")\n\n// Languages\nglobalSplitInstallManager.deferredLanguageInstall(listOf(Locale.forLanguageTag(\"DE\")))\n\\`\\`\\`\n\n### Monitor the state of an ongoing installation\n\\`\\`\\`kotlin\nvar mySessionId = 0\n\nval listener = GlobalSplitInstallUpdatedListener { state ->\n    if (state.sessionId() == mySessionId) {\n        when (state.status()) {\n            GlobalSplitInstallSessionStatus.DOWNLOADING -> ...\n            GlobalSplitInstallSessionStatus.INSTALLING -> ...\n            GlobalSplitInstallSessionStatus.INSTALLED -> ...\n            ...\n        }\n    }\n}\n\nglobalSplitInstallManager.registerListener(listener)\n    // When a request is accepted a session id is generated\n    // that you can use to monitor your request\n    .addOnSuccessListener { sessionId -> mySessionId = sessionId }\n    // Use this listener to handle errors any errors encountered\n    // during the request\n    .addOnFailureListener { exception -> ... }\n\\`\\`\\`\n\n\n### Get a user confirmation\nIn certain cases a user confirmation needs to be obtain to proceed with and installation, an example of this is when\na request to download a very large module is executed. Handle it like so:\n\\`\\`\\`kotlin\nval listener = GlobalSplitInstallUpdatedListener { state ->\n    if (state.sessionId() == mySessionId) {\n        when (state.status()) {\n            GlobalSplitInstallSessionStatus.REQUIRES_USER_CONFIRMATION -> {\n                globalSplitInstallManager.startConfirmationDialogForResult(\n                    state, \n                    activity, \n                    // Can be used in onActivityResult to determine whether\n                    // the user accepted the installation or not\n                    requestCode\n                )\n            }\n        }\n    }\n}\n\\`\\`\\`\n\n### Android 11 (R) with the selfhosted artifact\nIf your app is using the \\`com.jeppeman.globallydynamic.android:selfhosted\\` artifact while targeting Android R and [Scoped Storage](https://developer.android.com/preview/privacy/storage) is enabled,\nthe app requires a full restart after the user has granted permission to install from unknown sources.\nWhen granting the permission the system will kill and then recreate the app and bring it back to the state in which\nit was prior to dying. This can be handled gracefully in the following manner:\n\\`\\`\\`kotlin\nfun installMyModule() {\n    val request = GlobalSplitInstallRequest.newBuilder()\n        .addModule(\"myModule\")\n        .build()\n        \n    globalSplitInstallManager.registerListener(GlobalSplitInstallUpdatedListener { state ->\n        if (state.status() == GlobalSplitInstallSessionStatus.REQUIRES_USER_CONFIRMATION) {\n            globalSplitInstallManager.startConfirmationDialogForResult(state, myActivity, MY_REQUEST_CODE)\n        }\n    })\n    \n    globalSplitInstallManager.startInstall(request)\n}\n\noverride fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n    super.onActivityResult(requestCode, resultCode, data)\n    if (requestCode == MY_REQUEST_CODE && data?.hasExtra(GlobalSplitInstallConfirmResult.EXTRA_RESULT) == true) {\n        val installConfirmResult = data.getIntExtra(\n                GlobalSplitInstallConfirmResult.EXTRA_RESULT,\n                GlobalSplitInstallConfirmResult.RESULT_DENIED\n        )\n        \n        if (installConfirmResult == GlobalSplitInstallConfirmResult.RESULT_CONFIRMED) {\n            // The app recovered from the force stop and has permission to install, run the install again\n            installMyModule()\n        } else {\n            // The user did not grant install permissions, do something else\n        }\n    }\n}\n\\`\\`\\`\n\n**Note:** if the app does not automatically restart after the user has granted the permission, it is probably due to\nAndroid Studio preventing it from doing so; when testing this flow you should sever the app's connection to Android Studio,\neither by pressing the Stop button in Android Studio and the manually restarting the app, or installing the app through\n\\`./gradlew install\\` and then manually starting it.\n\nFor more examples, see [user guide](/user-guide).\n\n### Handle request errors\n\\`\\`\\`kotlin\nglobalSplitInstallManager.startInstall(request)\n     .addOnFailureListener { exception -> \n         when ((exception as? GlobalSplitInstallException)?.getErrorCode()) {\n             GlobalSplitInstallErrorCode.NETWORK_ERROR -> ...\n             GlobalSplitInstallErrorCode.INSUFFICIENT_STORAGE -> ...\n         }\n     }\n\\`\\`\\`\n\n### Cancel a request\n\\`\\`\\`kotlin\nglobalSplitInstallManager.cancelInstall(mySessionId)\n\\`\\`\\`\n\n### Install native libraries from dynamic modules\n\\`\\`\\`kotlin\nGlobalSplitInstallHelper.loadLibrary(context, \"myLib\")\n\\`\\`\\`\n\n### Install missing split APK:s\nThis will install all missing split APK:s (if any), i.e. missing install time features and density/language APK:s;\nthis is useful if only the \\`base-master\\` APK is installed, this can be the case if you enable dynamic delivery for an app store\nthat does not support it natively, since you will only be allowed to upload one APK. See \n[Enable Dynamic Delivery for Amazon App Store](/user-guide/amazon-app-store) for more info.\n\\`\\`\\`kotlin\nglobalSplitInstallManager.installMissingSplits()\n    .addOnSuccessListener { sessionId -> ...  }\n    .addOnFailureListener { exception -> ... }\n\\`\\`\\`\n\n\n`;\n\nconst Android = () => {\n    return (\n        <Box>\n            <Container>\n                <ReactMarkdown\n                    escapeHtml={false}\n                    source={markdown}\n                    renderers={\n                        {\n                            code: CodeBlock,\n                            link: LinkRenderer\n                        }\n                    }/>\n            </Container>\n        </Box>\n    );\n}\n\nexport default Android;\n","import React from \"react\"\nimport {Box, Container} from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport CodeBlock from \"../../../components/CodeBlock\"\nimport LinkRenderer from \"../../../components/LinkRenderer\";\nimport {versions} from \"../../../constants\";\n\nconst markdown = `\n# GloballyDynamic Gradle Plugin\n\n<!-- [![Maven Central](https://img.shields.io/maven-central/v/com.jeppeman.globallydynamic.gradle/plugin.svg?label=maven%20central&color=green)](https://search.maven.org/artifact/com.jeppeman.globallydynamic.gradle/plugin) -->\n[![Maven Central](https://img.shields.io/badge/maven--central-v${versions.GRADLE}-green)](https://search.maven.org/artifact/com.jeppeman.globallydynamic.gradle/plugin)\n\nA gradle plugin that hooks into the bundle build process of the \n[Android Gradle Plugin](https://developer.android.com/studio/releases/gradle-plugin) and \nuploads produced bundles as well as their accompanying signing configurations (used for signing produced split APK:s) to a configured [GloballyDynamic server](./server).<br/>\nCompatible with AGP 4.0 and above.<br/>\n\nThe plugin also generates meta data that gets packaged in the application that is being built for, this meta data is \nthen made available to the [Android Library](./android) which uses it to communicate with the \nGloballyDynamic server.\n\nCode\n---\n[https://github.com/jeppeman/GloballyDynamic/tree/master/globallydynamic-gradle-plugin](https://github.com/jeppeman/GloballyDynamic/tree/master/globallydynamic-gradle-plugin)\n\nUsage\n---\n\\`\\`\\`groovy\nbuildscript {\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath \"com.jeppeman.globallydynamic.gradle:plugin:${versions.GRADLE}\"\n    }\n}\n\napply plugin: 'com.jeppeman.globallydynamic'\n\\`\\`\\`\n### Snapshots\n\\`\\`\\`groovy\nbuildscript {\n    repositories {\n        maven {\n            url \"https://oss.sonatype.org/content/repositories/snapshots/\"\n        }\n    }\n}\n\\`\\`\\`\n\nTasks\n---\nThe plugin introduces the following variant aware tasks, normally you do not need to call any of these manually; \nhowever, if you want to enable dynamic delivery for Amazon App Store, Samsung Galaxy Store, or other platforms without\nnative support for it, the APK builder tasks are useful for creating APK:s suitable for distribution to these platforms.\n\n| **Task** | **Description** |\n| -------- | --------------- |\n| \\`writeGloballyDynamicConfigurationSourceFilesFor<Flavor><BuildType>\\` | Writes configuration source files that will be included in the APK, the files include metadata that the android library will use to communicate with the GloballyDynamic server, such as url, username and password. |\n| \\`verifyGloballyDynamicDependenciesFor<Flavor><BuildType>\\`            | Verifies that the setup is dependency setup is correct. |\n| \\`uploadGloballyDynamicBundle<Flavor><BuildType>\\`                     | Uploads a bundle to a GloballyDynamic server. Any task in AGP that produces a bundle will be finalized by this if GloballyDynamic is enabled for the variant that the bundle is being built for. |\n| \\`buildUniversalApkFor<Flavor><BuildType>\\`                            | Builds a universal APK from an app bundle, this APK will contain all code and resources from the application, including install time features and on-demand features, on-demand features can be excluded however. |\n| \\`buildUnsignedUniversalApkFor<Flavor><BuildType>\\`                    | Builds an unsigned universal APK from an app bundle, this APK will contain all code and resources from the application, including install time features and on-demand features, on-demand features can be excluded however. |\n| \\`buildBaseApkFor<Flavor><BuildType>\\`                                 | Builds a base apk from an app bundle, this APK will only contain code and base resources from the main application module, the rest is stripped |\n| \\`buildUnsignedBaseApkFor<Flavor><BuildType>\\`                         | Builds an unsigned base apk from an app bundle, this APK will only contain code and base resources from the main application module, the rest is stripped |\n\nConfiguration\n---\nThe plugin exposes a configuration DSL that can be added to the \\`android\\` in which you can configure your servers,\nthis comes in the form of a \\`NamedDomainObjectContainer<GloballyDynamicServer>\\` for example: \n\\`\\`\\`groovy\nandroid {\n    globallyDynamicServers {\n        myServer {\n            throttleDownloadBy 2000\n            serverUrl 'https://my.server.url'\n            username 'username'\n            password 'password'\n            applyToBuildVariants 'freeDebug', 'paidDebug'\n        }\n    }\n}\n\\`\\`\\`\nOr if you are using kotlin script (\\`build.gradle.kts\\`):\n\\`\\`\\`kotlin\nimport com.jeppeman.globallydynamic.gradle.extensions.globallyDynamicServers\n\nandroid {\n    globallyDynamicServers {\n        create(\"myServer\") {\n            throttleDownloadBy = 2000\n            serverUrl = \"https://my.server.url\"\n            username = \"username\"\n            password = \"password\"\n            applyToBuildVariants(\"freeDebug\", \"paidDebug\")\n        }\n    }\n}\n\\`\\`\\`\n\nThe \\`GloballyDynamicServer\\` configuration object has the following attributes:\n\n| Attributes | Values | \n| :------------- | :--------- | \n| <kbd>throttleDownloadBy</kbd> - the amount of milliseconds to throttle the downloading of splits by | **Acceptable Values:** <kbd>long</kbd> > 0 - e.g. 5000 (will throttle for 5s)|\n| <kbd>serverUrl</kbd> - the URL of the GloballyDynamic server that the application will get its split APK:s from <br/><br/>**Note**: when left empty, the plugin will try to use the server that is running in Android Studio, if it is running. | **Acceptable Values:** <kbd>string</kbd> - e.g. \\`'http://192.168.0.58:8080'\\`|\n| <kbd>username</kbd> - the username for the GloballyDynamic server, leave empty if there are no credentials | **Acceptable Values:** <kbd>string</kbd> - e.g. \\`'myusername'\\`|\n| <kbd>password</kbd> - the password for the GloballyDynamic server, leave empty if there are no credentials | **Acceptable Values:** <kbd>string</kbd> - e.g. \\`'mypassword'\\`|\n| <kbd>applyToBuildVariants</kbd> - the build variants that this server should be applied to | **Acceptable Values:** <kbd>string...</kbd> - e.g. \\`'freeDebug', 'paidRelease'\\`|\n| <kbd>uploadAutomatically</kbd> - whether or not to upload bundles to the server automatically after they have been produced | **Acceptable Values:** <kbd>true</kbd> <kbd>false</kbd><br/><br/>**Default Value:** <kbd>true</kbd>|\n\nThese can also be specified through properties with the same name, prefixed by \\`globallyDynamicServer.\\` e.g in. \\`gradle.properties\\` or via command line as follows:\n\\`\\`\\`shell script\n./gradlew bundleDebug \\\\\n    -PgloballyDynamicServer.serverUrl=http://my.url \\\\\n    -PgloballyDynamicServer.throttleDownloadBy=5000 \\\\\n    -PgloballyDynamicServer.username=username \\\\\n    -PgloballyDynamicServer.password=password\n\\`\\`\\`\n\nThe plugin will also look for server configuration (url, username, password) under \\`build/globallydynamic/server_info.json\\` -\nthis is because the [Android Studio plugin](./studio) writes information about it's embedded \nserver to this location.\n<br/>\nThe order of precedence for these different ways of specifying the server information goes as follows:<br/>\n\\`Properties > DSL > server_info.json file\\`\n\nExamples\n---\nThe following example configures an Android Studio integrated server for all debug variants and a production server\nfor a release variant:\n\\`\\`\\`groovy\nbuildscript {\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath \"com.android.tools.build:gradle:${versions.AGP}\" \n        classpath \"com.jeppeman.globallydynamic.gradle:plugin:${versions.GRADLE}\"\n    }\n}\n\napply plugin: 'com.android.application'\napply plugin: 'com.jeppeman.globallydynamic'\n\nandroid {   \n    flavorDimensions 'packaging'\n    \n    productFlavors {\n        selfHosted { dimension 'packaging' }\n        gplay { dimension 'packaging' }\n        huawei { dimension 'packaging' }\n    }\n    \n    globallyDynamicServers {\n        // serverUrl is left empty, the plugin will then look for server configuration\n        // in the server_info.json file - this configuration should be used when running\n        // the server inside Android Studio\n        studioIntegrated {\n            throttleDownloadBy 5000 // Usually nice to have while developing\n            applyToBuildVariants 'selfHostedDebug', 'gplayDebug', 'huaweiDebug'\n        }\n\n        // Self hosted GloballyDynamic server used for selfHostedRelease variant\n        production {\n            serverUrl = \"http://my.globallydynamic.server\"\n            username = \"\\${MY_SECRET_USERNAME}\"\n            password = \"\\${MY_SECRET_PASSWORD}\"\n            applyToBuildVariants 'selfHostedRelease'\n        }\n    }\n}\n\nrepositories {\n    mavenCentral()\n}\n\n// Placeholder configuration, this is needed if you are declaring a dependency that is specific to *both* a build type\n// and a build flavor. See more <a href=\"https://developer.android.com/studio/build/dependencies#dependency_configurations\">here</a>.\nconfigurations { \n    selfHostedReleaseImplementation {}\n}\n\ndependencies {\n    debugImplementation 'com.jeppeman.globallydynamic.android:selfhosted:${versions.ANDROID}'     \n    selfHostedReleaseImplementation 'com.jeppeman.globallydynamic.android:selfhosted:${versions.ANDROID}'\n}\n\\`\\`\\`\n`;\n\nconst Gradle = () => {\n    return (\n        <Box>\n            <Container>\n                <ReactMarkdown\n                    escapeHtml={false}\n                    source={markdown}\n                    renderers={\n                        {\n                            code: CodeBlock,\n                            link: LinkRenderer\n                        }\n                    }/>\n            </Container>\n        </Box>\n    );\n}\n\nexport default Gradle;\n","import React from \"react\"\nimport {Box, Container} from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport CodeBlock from \"../../../components/CodeBlock\"\nimport LinkRenderer from \"../../../components/LinkRenderer\";\nimport {versions} from \"../../../constants\";\n\nconst markdown = `\n# GloballyDynamic Server Library\n\n<!-- [![Maven Central](https://img.shields.io/maven-central/v/com.jeppeman.globallydynamic.server/server.svg?label=maven%20central&color=green)](https://search.maven.org/artifact/com.jeppeman.globallydynamic.server/server)-->\n[![Maven Central](https://img.shields.io/badge/maven--central-v${versions.SERVER}-green)](https://search.maven.org/artifact/com.jeppeman.globallydynamic.server/server)\n\nA portable http server that receives [app bundles](https://developer.android.com/platform/technology/app-bundle) and uses [bundletool](https://developer.android.com/studio/command-line/bundletool) to generate and serve split APK:s to clients that are using the\n[GloballyDynamic Android library](./android). <br/>\nIt can be embedded into a java application, or run standalone on any system that has java installed. \n\nIt comes with 3 different options for how to store bundles:\n* Locally on the machine where the server is running\n* On [Google Cloud Storage](https://cloud.google.com/storage)\n* On [Amazon S3](https://aws.amazon.com/s3/)\n\nBundles on the server are identified by 3 variables: \n\n1. Application id (e.g. com.example.myapplication) \n2. Build variant (e.g. amazonRelease)\n3. Version code (e.g. 23)\n\nYou can therefore have multiple versions of the same application + version code combination active at the same time,\ni.e. one for each build variant.\n\nCode\n---\n[https://github.com/jeppeman/GloballyDynamic/tree/master/globallydynamic-server-lib](https://github.com/jeppeman/GloballyDynamic/tree/master/globallydynamic-server-lib)\n\nUsage\n---\n### Launching the server as a standalone application from the command line\nFirst build an executable jar as follows:\n\\`\\`\\`shell\n# Clone the repo\ngit clone https://github.com/jeppeman/GloballyDynamic && cd GloballyDynamic/globallydynamic-server-lib\n\n# Build an executable jar\n./gradlew executableJar -PoutputDir=$(pwd) -ParchiveName=globallydynamic-server.jar\n\\`\\`\\`\nThen run it from the command line with \\`java -jar globallydynamic-server.jar [options]\\`.<br/> \nThe following command line arguments can be given:\n\n| Flag | Values | \n| :------------- | :--------- | \n| <kbd>--port</kbd> - the port to start the server on <br/><br/>**Note**: when set to 0, the server will be assigned a random available port | **Acceptable Values:** <kbd>int</kbd> > 0 <br/><br/>**Default Value:** <kbd>0</kbd>|\n| <kbd>--username</kbd> - the username required to make requests to the server <br/><br/>**Note**: used in combination with <kbd>password</kbd> for basic auth - if left empty, no username will be required for clients | **Acceptable Values:** <kbd>string</kbd> - e.g. \\`myusername\\`|\n| <kbd>--password</kbd> - the password required to make requests to the server <br/><br/>**Note**: used in combination with <kbd>username</kbd> for basic auth - if left empty, no password will be required for clients | **Acceptable Values:** <kbd>string</kbd> - e.g. \\`mypassword\\`|\n| <kbd>--https-redirect</kbd> - whether or not redirect http requests to https | **Acceptable Values:** <kbd>true</kbd> <kbd>false</kbd><br/><br/>**Default Value:** <kbd>false</kbd>|\n| <kbd>--override-existing-bundles</kbd> - whether or not to replace existing bundles when uploading, i.e. bundles with the same version as the one being uploaded. | **Acceptable Values:** <kbd>true</kbd> <kbd>false</kbd><br/><br/>**Default Value:** <kbd>true</kbd>|\n| <kbd>--validate-signature-on-download</kbd> - whether or not to validate the signature of the application that wants to download splits | **Acceptable Values:** <kbd>true</kbd> <kbd>false</kbd><br/><br/>**Default Value:** <kbd>false</kbd>|\n| <kbd>--storage-backend</kbd> - the storage backend to used for storing uploaded bundles | **Acceptable Values:** <ul><li><kbd>local</kbd> - store bundles locally on the machine where the server is running.</li><li><kbd>gcp</kbd> - store bundles in Google Cloud Storage.</li><li><kbd>s3</kbd> - store bundles in Amazon S3.</li></ul>**Default Value:** <kbd>local</kbd> |\n| <kbd>--local-storage-path</kbd> - the path on the machine to store bundle at <br/><br/>**Note**: used in combination with <kbd>--storage-backend local</kbd> - has no effect otherwise. If a relative path is given, bundles will be stored relative to where the application was started from | **Acceptable Values:** <kbd>string</kbd> - e.g. \\`/home/me/globallydynamic\\`|\n| <kbd>--gcp-bucket-id</kbd> - the id of the bucket ot use in Google Cloud Storage <br/><br/>**Note**: used in combination with <kbd>--storage-backend gcp</kbd> - has no effect otherwise.<br/>**Note**: if the server is not running on GCP, you will need to set the \\`GOOGLE_APPLICATION_CREDENTIALS\\` environment variable in order to authenticate with GCP, see more [here](https://cloud.google.com/docs/authentication/getting-started#setting_the_environment_variable). | **Acceptable Values:** <kbd>string</kbd> - e.g. \\`my-bucket-id\\`|\n| <kbd>--s3-bucket-id</kbd> - the id of the bucket ot use in S3 <br/><br/>**Note**: used in combination with <kbd>--storage-backend s3</kbd> - has no effect otherwise.<br/>**Note**: if the server is not running on AWS, you will need to set the following environment variables in order to authenticate with AWS: <ul><li>\\`AWS_ACCESS_KEY_ID\\`</li><li>\\`AWS_SECRET_KEY\\`</li><li>\\`AWS_REGION\\`</li></ul> see more [here](https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-credentials.html). | **Acceptable Values:** <kbd>string</kbd> - e.g. \\`my-bucket-id\\`|\n\nThe options can also be picked up through the following environment variables:\n\\`\\`\\`shell script\nGLOBALLY_DYNAMIC_PORT=<port>\nGLOBALLY_DYNAMIC_USERNAME=<username>\nGLOBALLY_DYNAMIC_PASSWORD=<password>\nGLOBALLY_DYNAMIC_HTTPS_REDIRECT=<https-redirect>\nGLOBALLY_DYNAMIC_OVERRIDE_EXISTING_BUNDLES=<override-existing>\nGLOBALLY_DYNAMIC_VALIDATE_SIGNATURE_ON_DOWNLOAD=<validate-on-download>\nGLOBALLY_DYNAMIC_STORAGE_BACKEND=<storage-backend>\nGLOBALLY_DYNAMIC_LOCAL_STORAGE_PATH=<local-storage-path>\nGLOBALLY_DYNAMIC_GCP_BUCKET_ID=<gcp-bucket-id>\nGLOBALLY_DYNAMIC_S3_BUCKET_ID=<s3-bucket-id>\n\\`\\`\\`\nThe command line arguments take precedence over environment variables.<br/><br/>\n**Example**\n\\`\\`\\`shell script\n# With a local storage backend\njava -jar globallydynamic-server.jar \\\\\n    --port 8080 \\\\\n    --username johndoe \\\\\n    --password my-secret-password \\\\\n    --https-redirect false \\\\\n    --override-existing-bundles false \\\\\n    --validate-signature-on-download true \\\\\n    --storage-backend local \\\\\n    --local-storage-path /myapp/bundles\n   \n# With a gcp storage backend\njava -jar globallydynamic-server.jar \\\\\n    --port 8080 \\\\\n    --username johndoe \\\\\n    --password my-secret-password \\\\\n    --https-redirect false \\\\\n    --override-existing-bundles false \\\\\n    --validate-signature-on-download true \\\\\n    --storage-backend gcp \\\\\n    --gcp-bucket-id my-bucket-id \n    \n# With an s3 storage backend\njava -jar globallydynamic-server.jar \\\\\n    --port 8080 \\\\\n    --username johndoe \\\\\n    --password my-secret-password \\\\\n    --https-redirect false \\\\\n    --override-existing-bundles false \\\\\n    --validate-signature-on-download true \\\\\n    --storage-backend s3 \\\\\n    --s3-bucket-id my-bucket-id \n\\`\\`\\`\n\n### Embedding a server into a java application\nYou can also embed the server into your java application (this is done in the [Android Studio plugin](./studio)),\nto do so, add the following to your \\`build.gradle\\`:\n\\`\\`\\`groovy\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    implementation 'com.jeppeman.globallydynamic.server:server:${versions.SERVER}' \n}\n\\`\\`\\`\n**Or snapshots**\n\\`\\`\\`groovy\nrepositories {\n    maven {\n        url \"https://oss.sonatype.org/content/repositories/snapshots/\"\n    }\n}\n\\`\\`\\`\n\nThen use the api as follows:\n\\`\\`\\`kotlin\nimport com.jeppeman.globallydynamic.server.LocalStorageBackend\nimport com.jeppeman.globallydynamic.server.GloballyDynamicServer\nimport com.jeppeman.globallydynamic.server.Logger\nimport java.nio.file.Paths\n\n// Can be any class implementing the com.jeppeman.globallydynamic.server.StorageBackend interface\nval storageBackend = LocalStorageBackend.builder()\n    .setBaseStoragePath(Paths.get(\"bundles\"))\n    .build()\n\n// Can be any class implementing the com.jeppeman.globallydynamic.server.Logger interface\nval logger = Logger()\n\nval configuration = GloballyDynamicServer.Configuration.builder()\n    .setPort(8080)\n    .setHttpsRedirect(false)\n    .setStorageBackend(storageBackend)\n    .setOverrideExistingBundles(false)\n    .setValidateSignatureOnDownload(true)\n    .setUsername(\"username\")\n    .setPassword(\"password\")\n    .setLogger(logger)\n    .build()\n\nval server = GloballyDynamicServer(configuration)\nserver.start()\n\\`\\`\\`\n\nEndpoints\n---\nThe endpoints that the server exposes are listed below, all are protected by the credentials provided in the configuration (if any).\n\n### Uploading a bundle to the server (\\`/upload\\`)\nApp bundle uploading is done automatically by the [gradle plugin](./gradle) when building an app bundle - but in case you want to upload manually, \nPOST to the \\`/upload\\` endpoint, see [UploadBundleTask.kt](https://github.com/jeppeman/GloballyDynamic/blob/master/globallydynamic-gradle-plugin/plugin/src/main/java/com/jeppeman/globallydynamic/gradle/UploadBundleTask.kt) for an example.\nThe request needs to have the header \\`Content-Type: multipart/form-data\\` set, and the body needs to contain the following parts:\n\n| Name | Values | \n| :------------- | :--------- | \n| <kbd>bundle</kbd> - the bundle to upload | **Acceptable Values:** <kbd>application/octet-stream</kbd> - the byte stream of the bundle to upload |\n| <kbd>application-id</kbd> - the application id of the bundle to upload | **Acceptable Values:** <kbd>text/plain</kbd> - e.g. \\`com.example.globallydynamic\\`|\n| <kbd>version</kbd> - the version code of the bundle to upload | **Acceptable Values:** <kbd>text/plain</kbd> - e.g. \\`24\\` (versionCodeInt) |\n| <kbd>variant</kbd> - the variant that was used to build the bundle to upload | **Acceptable Values:** <kbd>text/plain</kbd> - e.g. \\`debug\\`, \\`release\\` or \\`freeDebug\\` etc.. |\n| <kbd>keystore</kbd> - the keystore to sign APK:s in the bundle with | **Acceptable Values:** <kbd>application/octet-stream</kbd> - the byte stream of the keystore to sign APK:s in the bundle with, e.g. the debug.keystore |\n| <kbd>signing-config</kbd> - the signing config for the keystore to sign APK:s in the bundle with | **Acceptable Values:** <kbd>application/json</kbd> - needs to have the following structure: <br/><br/> \\`{ \"storePassword\": \"my-secret-store-password\", \"keyAlias\": \"my-key-alias\", \"keyPassword\": \"my-secret-key-password\"}\\`|\n\n### Downloading split APK:s (\\`/download\\`)\nDownloading of split APK:s that have been previously uploaded to the server is done automatically by the [android library](./android) - but in case you need to do it manually, POST to the \n\\`/download\\` endpoint with an \\`application/json; charset=utf8\\` body containing the device specification of the device you want to download for, e.g.\n\n\\`\\`\\`json\n{\n  \"supportedAbis\": [\"arm64-v8a\", \"armeabi-v7a\"],\n  \"glExtensions\": [\"GL_IMAGE\"],\n  \"deviceFeatures\": [\"android.hardware.camera\"],\n  \"supportedLocales\": [\"en\", \"fr\"],\n  \"screenDensity\": 640,\n  \"sdkVersion\": 27\n}\n\\`\\`\\`\nCertain query parameters listed below are also needed:\n\n| Name | Required | Values | \n| :--------- | :--------- | :--------- | \n| <kbd>application-id</kbd> - the application id of the bundle to download split APK:s from | Yes | **Acceptable Values:** <kbd>string</kbd> - e.g. \\`com.example.globallydynamic\\`|\n| <kbd>version</kbd> - the version code of the bundle to download split APK:s from | Yes | **Acceptable Values:** <kbd>number</kbd> - e.g. \\`24\\` (versionCodeInt) |\n| <kbd>variant</kbd> - the variant that was used to build the bundle to download split APK:s from | Yes | **Acceptable Values:** <kbd>string</kbd> - e.g. \\`debug\\`, \\`release\\` or \\`freeDebug\\` etc.. |\n| <kbd>signature</kbd> - the SHA-1 fingerprint of the keystore used to sign the application | Yes | **Acceptable Values:** <kbd>string</kbd> e.g. \\`3A:B0:F2:86:6F:43:06:35:06:99:18:1D:2F:6A:9D:DB:15:31:44:99\\` |\n| <kbd>throttle</kbd> - the amount of time in ms to throttle the downloading of split APK:s by | No | **Acceptable Values:** <kbd>number</kbd> - e.g. \\`5000\\` - will throttle for 5 seconds |\n| <kbd>features</kbd> - the dynamic features from the bundle to download <br/><br/>**Note**: either this or <kbd>languages</kbd> need to be included in the request | No | **Acceptable Values:** <kbd>string</kbd> - e.g. \\`myfeature,myotherfeature\\` |\n| <kbd>languages</kbd> - the languages from the bundle to download <br/><br/>**Note**: either this or <kbd>features</kbd> need to be included in the request | No | **Acceptable Values:** <kbd>string</kbd> - e.g. \\`de,it,fr\\` |\n| <kbd>include-missing</kbd> - whether or not to include missing splits in the download, i.e. missing install time features and density/language splits | No | **Acceptable Values:** <kbd>true</kbd> <kbd>false</kbd> |\n\n**Example**:<br/>\n\\`/download?variant=debug&version=1&application-id=com.example.globallydynamic&throttle=1000&languages=ko,features=myfeature\\`\n`;\n\nconst Server = () => {\n    return (\n        <Box>\n            <Container>\n                <ReactMarkdown\n                    escapeHtml={false}\n                    source={markdown}\n                    renderers={\n                        {\n                            code: CodeBlock,\n                            link: LinkRenderer\n                        }\n                    }/>\n            </Container>\n        </Box>\n    );\n}\n\nexport default Server;\n","import React from \"react\"\nimport {Box, Container} from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport CodeBlock from \"../../../components/CodeBlock\"\nimport LinkRenderer from \"../../../components/LinkRenderer\";\nimport ImageRenderer from \"../../../components/ImageRenderer\";\nimport StudioInPlugin from \"../../../assets/plugin_in_studio.png\"\nimport ToolWindow from \"../../../assets/tool_window.png\"\nimport TopMenu from \"../../../assets/top_menu.png\"\n\nconst markdown = `\n# GloballyDynamic Studio Plugin\n\n[![Jetbrains Plugin](https://img.shields.io/jetbrains/plugin/v/com.jeppeman.globallydynamic?color=green)](https://plugins.jetbrains.com/plugin/14658-globallydynamic)\n\nAn Android Studio plugin that embeds a [GloballyDynamic server](./server) that apps can download\nsplit APK:s from during development. \nThis allows for a smooth developer experience when testing dynamic delivery locally, no need to emulate downloads -\nsplits will be downloaded from the embedded server, you can test things such poor network conditions and cancellation\nof downloads through system notifications etc with ease. <br/>\n\nIn order to use the embedded server it has to be configured through the [Gradle Plugin](./gradle), refer to it's documentation\nfor more details. \n\nCode\n---\n[https://github.com/jeppeman/GloballyDynamic/tree/master/globallydynamic-studio-plugin](https://github.com/jeppeman/GloballyDynamic/tree/master/globallydynamic-studio-plugin)\n\nUsage\n---\nDownload it from [here](https://plugins.jetbrains.com/plugin/14658-globallydynamic), in Android Studio search for\n\"GloballyDynamic\" in plugins and you should see:\n\n![Plugin](${StudioInPlugin})\n\nFeatures\n---\n### Server Log\nThe plugin includes a tool window that displays logs from the GloballyDynamic server, for example requests and server errors.\nIt looks like this:\n\n![Plugin](${ToolWindow})\n\nThis is useful to make sure that the interaction between an app and the server is working as expected.\n\n### Server menu items\nA GloballyDynamic group is added to the top menu, this has items for manually starting or stopping the GloballyDynamic server.\nIt looks like this:\n\n![Plugin](${TopMenu})\n\nNormally you do not need to use this since the server is started automatically (see next section); however, it can be useful \nif you want to test behavior in your app when connection can not be established with the server.\n\n### Automatic server starting before running an app with GloballyDynamic enabled\nIf GloballyDynamic is enabled for a project and build type, the plugin will automatically start the server before\nrunning the app.\n\n### Example\nThe video below shows how the gradle plugin and android library interacts with the GloballyDynamic server in \nAndroid Studio while uploading bundles and downloading splits:\n\n[YouTube](https://www.youtube.com/watch?v=K6CPYHlsJt4)\n`;\n\nconst Studio = () => {\n    return (\n        <Box>\n            <Container>\n                <ReactMarkdown\n                    escapeHtml={false}\n                    source={markdown}\n                    renderers={\n                        {\n                            code: CodeBlock,\n                            link: LinkRenderer,\n                            image: ImageRenderer\n                        }\n                    }/>\n            </Container>\n        </Box>\n    );\n}\n\nexport default Studio;\n","import React, {useEffect, useRef, useState} from \"react\"\nimport {findTop} from \"../utils\";\n\nexport type JavadocProps = { src: string; }\n\nconst Javadoc = ({src}: JavadocProps) => {\n    const ref = useRef<HTMLIFrameElement>(null);\n    const [height, setHeight] = useState(0);\n\n    useEffect(() => {\n        const top = findTop(ref.current);\n        const newHeight = window.innerHeight - top;\n        if (newHeight !== height) {\n            setHeight(newHeight);\n        }\n    });\n\n    return <iframe frameBorder={0}\n                   ref={ref}\n                   style={{border: 0}}\n                   title=\"GloballyDynamic Android Javadoc\"\n                   width=\"100%\"\n                   height={height}\n                   src={src}/>\n}\n\nexport default Javadoc;\n","import React from \"react\"\nimport Javadoc from \"../../../components/Javadoc\";\n\nconst Android = () => {\n    return <Javadoc src=\"/javadoc/android/index.html\" />\n}\n\nexport default Android;\n","import React from \"react\"\nimport Javadoc from \"../../../components/Javadoc\";\n\nconst Server = () => {\n    return <Javadoc src=\"/javadoc/server/index.html\"/>\n}\n\nexport default Server;\n","import React, {useEffect} from 'react';\nimport UserDocs from \"./user\"\nimport Javadoc from \"./javadoc\"\nimport DrawerPage from \"../components/DrawerPage\";\nimport {ReactComponent as Java} from \"../assets/java.svg\";\nimport {Android as AndroidIcon, Cloud, Person} from \"@material-ui/icons\";\nimport {ReactComponent as GradleIcon} from \"../assets/gradle.svg\";\nimport {ReactComponent as StudioIcon} from \"../assets/android_studio.svg\";\nimport Android from \"./user/android\"\nimport Gradle from \"./user/gradle\"\nimport Server from \"./user/server\"\nimport Studio from \"./user/studio\";\nimport AndroidJavadoc from \"./javadoc/android\"\nimport ServerJavadoc from \"./javadoc/server\"\nimport {useHistory, useLocation, useRouteMatch} from \"react-router\";\n\nexport const documentationDestinations = (pathPrefix: string) => ([\n    {\n        text: 'User docs',\n        icon: <Person/>,\n        exact: true,\n        url: 'user',\n        component: UserDocs,\n        childDestinations: [\n            {\n                text: 'Android Lib',\n                icon: <AndroidIcon/>,\n                url: 'user/android',\n                component: Android\n            },\n            {\n                text: 'Server Lib',\n                icon: <Cloud/>,\n                url: 'user/server',\n                component: Server\n            },\n            {\n                text: 'Gradle Plugin',\n                icon: <GradleIcon/>,\n                url: 'user/gradle',\n                component: Gradle\n            },\n            {\n                text: 'Studio Plugin',\n                icon: <StudioIcon/>,\n                url: 'user/studio',\n                component: Studio\n            }\n        ]\n    },\n    {\n        text: 'Javadoc',\n        icon: <Java/>,\n        url: 'javadoc',\n        exact: true,\n        component: Javadoc,\n        childDestinations: [\n            {\n                text: 'Android',\n                icon: <AndroidIcon/>,\n                url: 'javadoc/android',\n                component: AndroidJavadoc,\n            },\n            {\n                text: 'Server',\n                icon: <Cloud/>,\n                url: 'javadoc/server',\n                component: ServerJavadoc\n            }\n        ]\n    },\n].map(({childDestinations, ...destination}) => ({\n    pathPrefix,\n    childDestinations: childDestinations.map(childDestination => ({\n        pathPrefix,\n        ...childDestination\n    })),\n    ...destination\n})));\n\nconst Documentation = () => {\n    const history = useHistory();\n    const location = useLocation();\n    const match = useRouteMatch();\n    useEffect(() => {\n        if (location.pathname === \"/docs\") {\n            history.replace(\"/docs/user/android\")\n        }\n    }, [location]);\n\n    useEffect(() => {\n        document.documentElement.scrollTop = 0;\n    });\n\n    return <DrawerPage destinations={documentationDestinations(match.path)}/>;\n}\n\nexport default Documentation;\n","import React from \"react\"\nimport {Box, Container} from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport CodeBlock from \"../../components/CodeBlock\";\nimport LinkRenderer from \"../../components/LinkRenderer\";\nimport ImageRenderer from \"../../components/ImageRenderer\";\n\nconst markdown = `\n\n`\n\nconst GettingStarted = () => {\n    return (\n        <Box>\n            <Container>\n                <ReactMarkdown\n                    escapeHtml={false}\n                    source={markdown}\n                    renderers={\n                        {\n                            code: CodeBlock,\n                            link: LinkRenderer,\n                            image: ImageRenderer\n                        }\n                    }/>\n            </Container>\n        </Box>\n    );\n}\n\nexport default GettingStarted;\n","import React from \"react\"\nimport {Box, Container} from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport CodeBlock from \"../../components/CodeBlock\";\nimport LinkRenderer from \"../../components/LinkRenderer\";\nimport ImageRenderer from \"../../components/ImageRenderer\";\nimport {versions} from \"../../constants\";\n\nconst markdown = `\n# Running a dedicated GloballyDynamic server\n\nIn order to enable dynamic delivery for environments without native support for it - for example \nAmazon App Store, Samsung Galaxy Store or internally distributed builds on Firebase App Distribution - one has to run a \n[GloballyDynamic server](/docs/user/server) that is hosted in a location which is reachable from the app you want to \nenable it for.<br/>\nFor instance, this website has one running at [https://globallydynamic.io/api](https://globallydynamic.io/api) which I\nutilize for private projects.<br/>\n\nGloballyDynamic Server is designed to be lightweight and environment agnostic, it can be run on any cloud provider on which\nyou can run Java - the server on this website is running on [Google Compute Engine](https://cloud.google.com/compute).<br/>\nIt comes with 3 different options for how to store bundles:\n* Locally on the machine where the server is running\n* On [Google Cloud Storage](https://cloud.google.com/storage)\n* On [Amazon S3](https://aws.amazon.com/s3/)\n\nAn upcoming feature of this project is running the server as a service that developers can sign up for and use for free, \nthis will eliminate the need for self-hosting a server. In the meantime, however, in order to leverage dynamic delivery\non platforms without native support for it you have to host your own server.\n\nTo get started with configuring and running your server, follow the steps below on an environment where git and java are\navailable:\n\n### Build an executable server jar\n\\`\\`\\`shell\n# Clone the repo\ngit clone https://github.com/jeppeman/GloballyDynamic \n\n# Go to the server lib directory\ncd GloballyDynamic/globallydynamic-server-lib\n\n# Build a standalone executable jar\n./gradlew executableJar -PoutputDir=$(pwd) -ParchiveName=globallydynamic-server.jar\n\\`\\`\\`\n\n### Run the server\nPick one of the 3 aforementioned storage options along with other configuration options:\n\n**Option 1: bundles stored locally**\n\\`\\`\\`shell\njava -jar globallydynamic-server.jar \\\\\n    --port 8080 \\\\ # The port the server will listen on\n    --username johndoe \\\\ # The user name for the server (used as part of basic auth for client requests)\n    --password my-secret-password \\\\ # The password for the server (used as part of basic auth for client requests)\n    --storage-backend local \\\\ # The storage backend in which to store uploaded bundles\n    --local-storage-path path/to/bundles # The path on the local file system where bundles should be stored\n\\`\\`\\`\n\n**Option 2: bundles stored in Google Cloud Storage**\n\\`\\`\\`shell\njava -jar globallydynamic-server.jar \\\\\n    --port 8080 \\\\ # The port the server will listen on\n    --username johndoe \\\\ # The user name for the server (used as part of basic auth for client requests)\n    --password my-secret-password \\\\ # The password for the server (used as part of basic auth for client requests)\n    --storage-backend gcp \\\\ # The storage backend in which to store uploaded bundles\n    --gcp-bucket-id my-gcp-bucket # The bucket id on google cloud storage in which to store bundles\n\\`\\`\\`\n**Note**: if the server is *not* running on [GCP](https://cloud.google.com/), you will have to set the environment \nvariable \\`GOOGLE_APPLICATION_CREDENTIALS\\` in order to authenticate with GCP, see more \n[here](https://cloud.google.com/docs/authentication/getting-started#setting_the_environment_variable).\n\n**Option 3: bundles stored on Amazon S3**\n\\`\\`\\`shell\njava -jar globallydynamic-server.jar \\\\\n    --port 8080 \\\\ # The port the server will listen on\n    --username johndoe \\\\ # The user name for the server (used as part of basic auth for client requests)\n    --password my-secret-password \\\\ # The password for the server (used as part of basic auth for client requests)\n    --storage-backend s3 \\\\ # The storage backend in which to store uploaded bundles\n    --s3-bucket-id my-s3-bucket # The bucket id on google cloud storage in which to store bundles\n\\`\\`\\`\n**Note**: if the server is *not* running on AWS, you will have to set the following environment variables in order to \nauthenticate with AWS:\n* \\`AWS_ACCESS_KEY_ID\\`\n* \\`AWS_SECRET_KEY\\`\n* \\`AWS_REGION\\`\n\nSee more [here](https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-credentials.html).\n\nYou can then use the server from your app in the following way:\n\\`\\`\\`groovy\nandroid {\n    globallyDynamicServers {\n        selfHosted {\n            serverUrl \"http://<ip-to-server>:8080\"\n            username \"johndoe\"\n            password \"my-secret-password\"\n            applyToBuildVariants \"release\"\n        }\n    }\n}\n\ndependencies {\n    releaseImplementation \"com.jeppeman.globallydynamic.android:selfhosted:${versions.ANDROID}\"\n}\n\\`\\`\\`\n\n### Example: running the server on Google Compute Engine\n\nIn order to get up and running quickly with a server on Google Compute Engine you can run the shell command\nbelow after having installed and configured [Google Cloud SDK](https://cloud.google.com/sdk/install). \n\\`\\`\\`shell\ncurl https://globallydynamic.io/scripts/compute_engine_launch.sh | /usr/bin/env bash\n\\`\\`\\`\n\nThe command will download and execute a script that does the following:\n\n1. Create a bucket in Google Cloud Storage in which to store bundles\n2. Create a VM instance that will start a GloballyDynamic server on machine startup, the server will be listening on port 8080\nand have the credentials johndoe/my-secret-password \n3. Create a firewall rule that will allow incoming traffic on port 8080\n\nThe last line of output from script will look something like \\`Done! Address to server: http://<ip-to-server>:8080\\`,\nuse this address when configuring the app, like so:\n\\`\\`\\`groovy\ngloballyDynamicServers {\n    selfHosted {\n        serverUrl \"http://<ip-to-server>:8080\"\n        username \"johndoe\"\n        password \"my-secret-password\"\n        applyToBuildVariants \"release\"\n    }\n}\n\\`\\`\\`\n\nHere is the source of the downloaded script:\n\\`\\`\\`shell\n#!/usr/bin/env bash\n\nset -e\n\n# Create a bucket in Google Cloud Storage where bundles will be stored\nbucket_id=\"globallydynamic-$(uuidgen | tr '[:upper:]' '[:lower:]')\"\ngsutil mb -l eu \"gs://\\${bucket_id}\"\n\nport=8080\nzone=europe-west1-b\ninstance_name=globallydynamic\n\n# Environment variables for the VM instance, GloballyDynamic Server configuration and java location\necho \"\nexport GLOBALLY_DYNAMIC_PORT=\\${port}\nexport GLOBALLY_DYNAMIC_USERNAME=johndoe\nexport GLOBALLY_DYNAMIC_USERNAME=my-secret-password\nexport GLOBALLY_DYNAMIC_STORAGE_BACKEND=gcp\nexport GLOBALLY_DYNAMIC_GCP_BUCKET_ID=\\${bucket_id}\nexport GLOBALLY_DYNAMIC_HTTPS_REDIRECT=false\nexport GLOBALLY_DYNAMIC_OVERRIDE_EXISTING_BUNDLES=false\nexport GLOBALLY_DYNAMIC_VALIDATE_SIGNATURE_ON_DOWNLOAD=true\nexport JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64\n\" > vm_environment\n\n# Define startup script (called when VM starts), this will start the GloballyDynamic Server\necho \"\n#!/usr/bin/env bash\n\nset -e\nset -o xtrace\n\n# Set up environment (load GloballyDynamic Server configuration)\ncurl -f http://metadata.google.internal/computeMetadata/v1/instance/attributes/environment -H \\\"Metadata-Flavor: Google\\\" > env_file\n\nsource env_file\n\n# Run the server\njava -jar globallydynamic-server.jar &\n\" > startup_script\n\n# Create a VM instance\ngcloud compute instances create \\${instance_name} \\\\\n    --image-project=debian-cloud \\\\\n    --image-family=debian-9 \\\\\n    --tags=http-server,https-server \\\\\n    --scopes=cloud-platform \\\\\n    --zone=\\${zone} \\\\\n    --metadata-from-file=environment=vm_environment,startup-script=startup_script\n    \n# Build an executable server jar in the VM\ngcloud compute ssh --ssh-flag=\"-ttn\" --zone \\${zone} \\${instance_name} -- \"sudo apt-get install -y openjdk-8-jdk \\\\\n    && cd / \\\\\n    && sudo curl -L --output /globallydynamic-server.jar https://github.com/jeppeman/GloballyDynamic/releases/download/server-1.0.0/globallydynamic-server-1.0.0-standalone.jar\n\"\n\n# Allow incoming traffic on port 8080\ngcloud compute firewall-rules create allow-http-\\${port} \\\\\n    --allow tcp:\\${port} \\\\\n    --source-ranges 0.0.0.0/0 \\\\\n    --target-tags http-server \\\\\n    --description \"Allow port \\${port} access to http-server\"\n    \n# Restart instance\ngcloud compute instances stop \\${instance_name} --zone \\${zone}\ngcloud compute instances start \\${instance_name} --zone \\${zone}\n\n# Cleanup\nrm startup_script\nrm vm_environment\n\n# Get the ip of the instance\nserver_ip=$(gcloud compute instances describe \\${instance_name} --zone \\${zone} --format='get(networkInterfaces[0].accessConfigs[0].natIP)')\nserver_url=\"http://\\${server_ip}:\\${port}\"\n\necho \"Waiting for the server to start, this may take a few minutes..\"\niterations=0\nwhile [[ -z $(curl -s --max-time 2 \\${server_url}) ]];\ndo\nif [[ \\${iterations} -gt 60 ]];\nthen\n   echo \"Server failed to start\"\n   exit 1\nfi\niterations=$((\\${iterations} + 1))\nsleep 2\ndone\n\necho \"Done! Address to server: \\${server_url}\"\n\n\\`\\`\\`\nNote: this script does not create a production worthy setup, in order to convert it to one, you should create a [managed instance group](https://cloud.google.com/compute/docs/instance-groups)\nwith a [load balancer](https://cloud.google.com/iap/docs/load-balancer-howto) in front. \n\nFor more configuration options, see the [server documentation](/docs/user/server).\n`;\n\nconst Server = () => {\n    return (\n        <Box>\n            <Container>\n                <ReactMarkdown\n                    escapeHtml={false}\n                    source={markdown}\n                    renderers={\n                        {\n                            code: CodeBlock,\n                            link: LinkRenderer,\n                            image: ImageRenderer\n                        }\n                    }/>\n            </Container>\n        </Box>\n    );\n}\n\nexport default Server;\n","import React from \"react\";\nimport {Box, Container} from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport CodeBlock from \"../../components/CodeBlock\";\nimport LinkRenderer from \"../../components/LinkRenderer\";\nimport ImageRenderer from \"../../components/ImageRenderer\";\nimport AmazonGif from \"../../assets/amazon.gif\"\nimport {versions} from \"../../constants\";\n\nconst markdown = `\n# Enable Dynamic Delivery for Amazon App Store\n\nCurrently, [Amazon App Store](https://developer.amazon.com/apps-and-games) does not natively support dynamic delivery, meaning that \nyou can not upload app bundles, but it can be enabled through the following steps:\n\n1. Run a dedicated GloballyDynamic server that is reachable from your app.\n2. Make a request for enabling self signing of your app in Amazon Developer Console.\n3. Build an *unsigned* APK that is stripped of on-demand modules and upload it to Amazon Developer Console.\n\nBelow follows further instructions for each of the steps:\n\n### 1. Run a dedicated server\nFollow the guide [here](./server).\n\n### 2. Make a request for enabling self signing in Amazon Developer Console\nBy default when you publish an app to Amazon App Store the APK will be stripped of the original developer signature and re-signed \nby Amazon. Unfortunately this breaks dynamic delivery as the split APK:s will be downloaded from a GloballyDynamic server, \nrather than from Amazon App Store, and in order to install split APK:s they need to be signed with the same certificate \nas the base APK.\n\nYou can keep the original signature by [making a request](https://developer.amazon.com/support/contact-us) in Amazon \nDeveloper Console in which you state that you want to enable \"Self Signing\" for you application.\nOnce approved, you can start uploading APK:s and have the original signature preserved.\n\n### 3. Build an *unsigned* APK that is stripped of on-demand modules and publish it\nSince app bundles (.aab:s) can not be uploaded to Amazon App Store, a suitable APK that has been stripped of on-demand\nmodules has to be built and uploaded. \n\nFirst of all, the app has to be configured to use the dedicated server, like so:\n\\`\\`\\`groovy\nandroid {\n    flavorDimensions 'distributionPlatform'\n    \n    productFlavors {\n        amazon {\n            dimension 'distributionPlatform'\n        }\n    }\n    \n    globallyDynamicServers {\n        selfHosted {\n            serverUrl 'https://my.globallydynamic.server'\n            username 'my-username'\n            password 'my-secret-password'\n            applyToBuildVariants 'amazonRelease'\n        }\n    }\n}\n\nconfigurations {\n    amazonReleaseImplementation {}\n}\n\ndependencies {\n    amazonReleaseImplementation 'com.jeppeman.globallydynamic.android:selfhosted:${versions.ANDROID}'\n}\n\\`\\`\\`\nWhen publishing with Self Signing, Amazon requires you to first upload an *unsigned* APK that they will wrap with\nsecurity features that verifies binary authenticity, you then download this wrapped APK from Amazon Developer Console\nand sign it with your certificate and upload the signed version.<br/><br/> \nThere are a few different ways in which you can produce this unsigned APK that is stripped of on-demand modules:\n\n**Option 1 (recommended), build a universal APK (\\`./gradlew buildUnsignedUniversalApkForAmazonRelease\\`):** \n\nThis APK will include *all* code and resources from the application, including dynamic feature modules, \nboth install time and on-demand. There is a way to exclude on-demand modules from the produced APK however; \nby disabling *fusing* for a dynamic feature module, it will be excluded from the universal APK, like so:\n\\`\\`\\`xml\n<manifest xmlns:dist=\"http://schemas.android.com/apk/distribution\"\n    package=\"com.example.myapp.feature\">\n\n    <dist:module\n        dist:instant=\"false\"\n        dist:title=\"@string/title_my_feature\">\n        <dist:delivery>\n            <dist:on-demand />\n        </dist:delivery>\n        \n        <!-- Fusing disabled -->\n        <dist:fusing dist:include=\"false\" /> \n    </dist:module>\n</manifest>\n\\`\\`\\`\nThe appealing thing about the universal APK in comparison to the others is that you do not have to call\n\\`globalSplitInstallManager.installMissingSplits()\\`, install time features are immediately available, while \non-demand modules are still downloaded dynamically.\n\n**Option 2, build a base APK (\\`./gradlew buildUnsignedBaseApkForAmazonRelease\\`):**\nthis APK will *only* contain code and resources\nfrom the main application module, i.e. no dynamic feature modules, neither install time nor on-demand modules. Therefore install\ntime modules also become on-demand modules, i.e. they will be downloaded at runtime as they are needed. The android\nlibrary comes with a way of installing all *missing* splits, meaning missing install time modules and density/language \nmodules, this can be called immediately after application startup if you want install time modules to be readily \navailable as soon as possible:\n\\`\\`\\`kotlin\nglobalSplitInstallManager.installMissingSplits()\n    .addOnSuccessListener { startMyActivityFromInstallTimeFeature() }\n\\`\\`\\`\nWith this APK it is strongly recommended that you call this on app start since non-default assets / languages will\nbe missing from the APK.\n\n\n**Option 3, build a bundle and a standard APK (\\`./gradlew bundleAmazonRelease assembleAmazonRelease\\`):**\nthis APK will also only contain code and resources from the \nmain application module, the difference compared to the base APK is that this APK is not stripped of \nnon-default languages and assets - so somewhat less naked, if you will. With this APK it is you can also use\n\\`globalSplitInstallManager.installMissingSplits()\\` if you want install time feature to be available as soon\nas possible.\n\n**Publish the APK**<br/>\nWhen you've managed to upload the signed version of the APK and gotten an approval, dynamic delivery for you\napp on Amazon App Store should be up and running.\n\n### Live Example\nMy example project [Android Jetpack Playground](https://github.com/jeppeman/android-jetpack-playground) is \npublished on Amazon App Store, refer to it for a complete setup.\n\n![Amazon](${AmazonGif})\n`\n\nconst AmazonAppStore = () => {\n    return (\n        <Box>\n            <Container>\n                <ReactMarkdown\n                    escapeHtml={false}\n                    source={markdown}\n                    renderers={\n                        {\n                            code: CodeBlock,\n                            link: LinkRenderer,\n                            image: ImageRenderer\n                        }\n                    }/>\n            </Container>\n        </Box>\n    );\n}\n\nexport default AmazonAppStore;\n","import React from \"react\";\nimport {Box, Container} from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport CodeBlock from \"../../components/CodeBlock\";\nimport LinkRenderer from \"../../components/LinkRenderer\";\nimport ImageRenderer from \"../../components/ImageRenderer\";\nimport GalaxyGif from \"../../assets/galaxy.gif\"\nimport {versions} from \"../../constants\";\n\nconst markdown = `\n# Enable Dynamic Delivery for Samsung Galaxy Store\n\nThe story with [Samsung Galaxy Store](https://www.samsung.com/us/apps/galaxy-store/) is the same as Amazon App Store:\nit does not natively support dynamic delivery. However, the process of enabling it is a little bit simpler as \nSelf Signing is enabled by default. Therefore it is merely a two-step process:\n\n1. Run a dedicated GloballyDynamic server that is reachable from your app.\n2. Build an APK that is stripped of on-demand modules and upload to Samsung Galaxy Seller Portal.\n\n### 1. Run a dedicated server\nFollow the guide [here](./server).\n\n### 2. Build an APK that is stripped of on-demand modules and publish it\nApp bundles (.aab:s) can not be uploaded to Samsung Galaxy Store neither, therefore a suitable APK stripped of \non-demand modules has to built and published there as well.\n\nConfigure your app to use the dedicated server:\n\\`\\`\\`groovy\nandroid {\n    flavorDimensions 'distributionPlatform'\n    \n    productFlavors {\n        galaxy {\n            dimension 'distributionPlatform'\n        }\n    }\n    \n    globallyDynamicServers {\n        selfHosted {\n            serverUrl 'https://my.globallydynamic.server'\n            username 'my-username'\n            password 'my-secret-password'\n            applyToBuildVariants 'galaxyRelease'\n        }\n    }\n}\n\nconfigurations {\n    galaxyReleaseImplementation {}\n}\n\ndependencies {\n    galaxyReleaseImplementation 'com.jeppeman.globallydynamic.android:selfhosted:${versions.ANDROID}'\n}\n\\`\\`\\`\nTo build the actual APK, the process is the same as for Amazon App Store, except that you do not have to build an\nunsigned APK - your options are the following:\n\n**Option 1 (recommended), build a universal APK (\\`./gradlew buildUniversalApkForGalaxyRelease\\`):** this APK will include *all* code and \nresources from the application, including dynamic feature modules, both install time and on-demand. There is a way\nto exclude on-demand modules from the produced APK however; by disabling *fusing* for a dynamic feature module,\nit will be excluded from the universal APK, like so:\n\\`\\`\\`xml\n<manifest xmlns:dist=\"http://schemas.android.com/apk/distribution\"\n    package=\"com.example.myapp.feature\">\n\n    <dist:module\n        dist:instant=\"false\"\n        dist:title=\"@string/title_my_feature\">\n        <dist:delivery>\n            <dist:on-demand />\n        </dist:delivery>\n        \n        <!-- Fusing disabled -->\n        <dist:fusing dist:include=\"false\" /> \n    </dist:module>\n</manifest>\n\\`\\`\\`\nThe appealing thing about the universal APK in comparison to the others is that you do not have to call\n\\`globalSplitInstallManager.installMissingSplits()\\`, install time features are immediately available, while \non-demand modules are still downloaded dynamically.\n\n**Option 2, build a base APK (\\`./gradlew buildBaseApkForGalaxyRelease\\`)**: this APK will *only* contain code and resources\nfrom the main application module, i.e. no dynamic feature modules, neither install time nor on-demand modules. Therefore install\ntime modules also become on-demand modules, i.e. they will be downloaded at runtime as they are needed. The android\nlibrary comes with a way of installing all *missing* splits, meaning missing install time modules and density/language \nmodules, this can be called immediately after application startup if you want install time modules to be readily \navailable as soon as possible:\n\\`\\`\\`kotlin\nglobalSplitInstallManager.installMissingSplits()\n    .addOnSuccessListener { startMyActivityFromInstallTimeFeature() }\n\\`\\`\\`\nWith this APK it is strongly recommended that you call this on app start since non-default assets / languages will\nbe missing from the APK.<br/><br/>\n**Option 3, build a bundle and a standard APK (\\`./gradlew bundleGalaxyRelease assembleGalaxyRelease\\`)**: \nthis APK will also only contain code and resources from the \nmain application module, the difference compared to the base APK is that this APK is not stripped of \nnon-default languages and assets - so somewhat less naked, if you will. With this APK it is you can also use\n\\`globalSplitInstallManager.installMissingSplits()\\` if you want install time feature to be available as soon\nas possible.\n\n**Publish the APK**<br/>\nFinally publish your produced APK and get it approved and you're up and running.\n\n### Live Example\nMy example project [Android Jetpack Playground](https://github.com/jeppeman/android-jetpack-playground) is \npublished on Samsung Galaxy Store, refer to it for a complete setup.\n\n![Galaxy](${GalaxyGif})\n`\n\nconst SamsungGalaxyStore = () => {\n    return (\n        <Box>\n            <Container>\n                <ReactMarkdown\n                    escapeHtml={false}\n                    source={markdown}\n                    renderers={\n                        {\n                            code: CodeBlock,\n                            link: LinkRenderer,\n                            image: ImageRenderer\n                        }\n                    }/>\n            </Container>\n        </Box>\n    );\n}\n\nexport default SamsungGalaxyStore;\n","import React from \"react\"\nimport {Box, Container} from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport CodeBlock from \"../../components/CodeBlock\";\nimport LinkRenderer from \"../../components/LinkRenderer\";\nimport ImageRenderer from \"../../components/ImageRenderer\";\nimport HuaweiGif from \"../../assets/huawei.gif\"\nimport {versions} from \"../../constants\";\n\nconst markdown = `\n# Enable Dynamic Delivery for Huawei App Gallery\n\nHuawei App Gallery supports dynamic delivery natively through [Dynamic Ability](https://developer.huawei.com/consumer/en/doc/development/AppGallery-connect-Guides/agc-featuredelivery-introduction),\nhence there is no need to run a GloballyDynamic Server in order to enable it.\n\nHowever, in order to verify that your application works as expected on Huawei App Gallery, you should use their\n[open testing service](https://developer.huawei.com/consumer/jp/doc/development/AppGallery-connect-Guides/agc-betatest-introduction).\nThis service works similar to [Google Play's internal test tracks](https://developer.android.com/distribute/best-practices/launch/test-tracks)\nand allows you to distribute the app on Huawei App Gallery to a group of testers without having to go through the \nofficial review pipeline. <br/>\nThe service is still in a beta stage and therefore requires you to [apply for access to it](https://developer.huawei.com/consumer/jp/doc/development/AppGallery-connect-Guides/agc-betatest-apply),\naccess is usually granted very quickly.\n\n### Configuring your app to install dynamic modules through Huawei App Gallery\nSimply create a Huawei build flavor and use the huawei artifact from the android library as follows:\n\\`\\`\\`groovy\nandroid {\n    flavorDimensions 'distributionPlatform'\n    \n    productFlavors {\n        huawei {\n            dimension 'distributionPlatform'\n        }\n    }\n}\n\n\nrepositories { \n    google()\n    mavenCentral()\n    \n    // The Dynamic Ability artifact is in this repo\n    maven { url 'http://developer.huawei.com/repo' } \n}\n\nconfigurations {\n    huaweiReleaseImplementation {}\n}\n\ndependencies {\n    huaweiReleaseImplementation 'com.jeppeman.globallydynamic.android:huawei:${versions.ANDROID}'\n}\n\\`\\`\\`\n\n### Live example\nMy example project [Android Jetpack Playground](https://github.com/jeppeman/android-jetpack-playground) is \npublished on Huawei App Gallery, refer to it for a complete setup.\n\n![Galaxy](${HuaweiGif})\n`\n\nconst HuaweiAppGallery = () => {\n    return (\n        <Box>\n            <Container>\n                <ReactMarkdown\n                    escapeHtml={false}\n                    source={markdown}\n                    renderers={\n                        {\n                            code: CodeBlock,\n                            link: LinkRenderer,\n                            image: ImageRenderer\n                        }\n                    }/>\n            </Container>\n        </Box>\n    );\n}\n\nexport default HuaweiAppGallery;\n","import React from \"react\";\nimport {Box, Container} from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport CodeBlock from \"../../components/CodeBlock\";\nimport LinkRenderer from \"../../components/LinkRenderer\";\nimport ImageRenderer from \"../../components/ImageRenderer\";\nimport ToolWindow from \"../../assets/tool_window.png\"\n\nconst markdown = `\n# Troubleshooting\n\nIf things aren't working as expected, the cause can hopefully be found in either the server logs or LogCat; the Android Studio plugin includes\na tool window on the bottom named GloballyDynamic Log where all requests and server errors will be logged - it looks as follows:\n\n![Tool Window](${ToolWindow})\n\nAny operation carried out by the android library is logged under the tag \\`I/GloballyDynamic\\`, filter on it to find any errors produced.\n\nIf you have trouble reaching the android studio integrated server from your app, make sure that your machine is reachable on your network.\nIf you have a Samsung with Secure WiFi, http requests to the server may be blocked by it, if so, disable Secure WiFi.\n\n### Android 11 (R) with selfhosted artifact\nIf your app is using the com.jeppeman.globallydynamic.android:selfhosted artifact while targeting Android R and [Scoped Storage](https://developer.android.com/preview/privacy/storage) is enabled,\nthe app requires a full restart after the user has granted permission to install from unknown sources.\nWhen granting the permission the system will kill and then recreate the app and bring it back to the state in which\nit was prior to dying. This can be handled gracefully in the following manner:\n\\`\\`\\`kotlin\nfun installMyModule() {\n    val request = GlobalSplitInstallRequest.newBuilder()\n        .addModule(\"myModule\")\n        .build()\n        \n    globalSplitInstallManager.registerListener(GlobalSplitInstallUpdatedListener { state ->\n        if (state.status() == GlobalSplitInstallSessionStatus.REQUIRES_USER_CONFIRMATION) {\n            globalSplitInstallManager.startConfirmationDialogForResult(state, myActivity, MY_REQUEST_CODE)\n        }\n    })\n    \n    globalSplitInstallManager.startInstall(request)\n}\n\noverride fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n    super.onActivityResult(requestCode, resultCode, data)\n    if (requestCode == MY_REQUEST_CODE && data?.hasExtra(GlobalSplitInstallConfirmResult.EXTRA_RESULT) == true) {\n        val installConfirmResult = data.getIntExtra(\n                GlobalSplitInstallConfirmResult.EXTRA_RESULT,\n                GlobalSplitInstallConfirmResult.RESULT_DENIED\n        )\n        \n        if (installConfirmResult == GlobalSplitInstallConfirmResult.RESULT_CONFIRMED) {\n            // The app recovered from the force stop and has permission to install, run the install again\n            installMyModule()\n        } else {\n            // The user did not grant install permissions, do something else\n        }\n    }\n}\n\\`\\`\\`\n\n**Note:** if the app does not automatically restart after the user has granted the permission, it is probably due to\nAndroid Studio preventing it from doing so; when testing this flow you should sever the app's connection to Android Studio,\neither by pressing the Stop button in Android Studio and the manually restarting the app, or installing the app through\n\\`./gradlew install\\` and then manually starting it.\n`;\n\nconst Troubleshooting = () => {\n    return (\n        <Box>\n            <Container>\n                <ReactMarkdown\n                    escapeHtml={false}\n                    source={markdown}\n                    renderers={\n                        {\n                            code: CodeBlock,\n                            link: LinkRenderer,\n                            image: ImageRenderer\n                        }\n                    }/>\n            </Container>\n        </Box>\n    );\n}\n\nexport default Troubleshooting;\n\n","import React from \"react\"\nimport {Box, Container} from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport CodeBlock from \"../../../components/CodeBlock\";\nimport LinkRenderer from \"../../../components/LinkRenderer\";\nimport ApkFromBundle from \"../../../assets/apk_from_bundle.png\"\nimport UploadLog from \"../../../assets/upload_log.jpg\"\nimport FlowDiagram from \"../../../assets/flow_diagram.png\"\nimport ImageRenderer from \"../../../components/ImageRenderer\";\nimport {versions} from \"../../../constants\";\n\nconst markdown = `\n# Development setup\n\nThis page will walk you through how to configure your project for a development setup, this setup will allow you to utilise \ndynamic delivery through a local server running in Android Studio before uploading your bundle to any App Store. It works in the following way:<br/><br/>\nWhen a bundle is built by the [Android Gradle Plugin](https://developer.android.com/studio/releases/gradle-plugin)\n(for example through \\`./gradlew bundle\\`), it is intercepted by the [GloballyDynamic Gradle plugin](/docs/user/gradle) and uploaded to \na [GloballyDynamic Server](/docs/user/server) running inside Android Studio, your app then downloads split APK:s from \nthis server via the [Android library](/docs/user/android). This process is illustrated in the picture below:\n\n<span></span><div style=\"text-align: center;\">![Flow Diagram](${FlowDiagram})</div>\n\n#### 1. Install the GloballyDynamic [Android Studio Plugin](/docs/user/studio)\nNeeded for running the server in Android Studio, the plugin allows for a smooth developer experience where you can test\nvarious install scenarios with ease, such as:\n\n* Slow download speeds\n* Broken server connection\n* Cancellation of downloads\n* Multiple install sessions\n\n#### 2. Configure the \\`build.gradle\\` of your base application module\nIn order for your app to use the Android Studio integrated server it has to be configured as follows:\n\\`\\`\\`groovy\nbuildscript {\n    repositories {\n        google()\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:${versions.AGP}'\n        classpath 'com.jeppeman.globallydynamic.gradle:plugin:${versions.GRADLE}'\n    }\n}\n\napply plugin: 'com.android.application'\napply plugin: 'com.jeppeman.globallydynamic'\n\nandroid {\n    // DSL from the gradle plugin in which you configure your GloballyDynamic servers\n    globallyDynamicServers {\n        // Dev server running inside Android Studio, applied to debug builds.\n        // Note that 'serverUrl' is left intentionally empty here, when this is the case\n        // the Android Studio integrated server will be used\n        studioIntegrated {\n            // Optional: throttles the download speed of split APK:s by the amount of milliseconds given.\n            // Useful for testing download dialogs and slow network conditions etc.\n            throttleDownloadBy 2000 \n            \n            // The build variants that this server should be applied to.\n            // For the dev setup we only apply it to debug.\n            applyToBuildVariants 'debug'\n        }\n    }\n    \n    dynamicFeatures = [':my_dynamic_feature']\n}\n\ndependencies {\n    // With this artifact split install requests will be delegated to a self hosted \n    // GloballyDynamic server, in this case the Android Studio integrated one\n    debugImplementation 'com.jeppeman.globallydynamic.android:selfhosted:${versions.ANDROID}'\n}\n\\`\\`\\`\n\nIf you are using kotlin script (build.gradle.kts):\n\\`\\`\\`kotlin\nimport com.jeppeman.globallydynamic.gradle.extensions.globallyDynamicServers\n\nandroid {   \n    globallyDynamicServers {\n        create(\"studioIntegrated\") {\n            ...\n        }\n    }\n}\n\\`\\`\\`\n\n#### 3. Integrate Android library \nThe Android library is a wrapper around underlying app store client API:s, as well as an implementation of it's own that \ninteracts with [GloballyDynamic Servers](/docs/user/server). The API it exposes very much mirrors that of the \n[Play Core library](https://developer.android.com/guide/playcore).\n\n**Enable GlobalSplitCompat**<br/><br/>\nIn order for your app to access code and resources from a downloaded module you need to enable GlobalSplitCompat as \nillustrated below:\n\\`\\`\\`kotlin\nimport com.jeppeman.globallydynamic.globalsplitcompat.GlobalSplitCompatApplication\n\nclass MyApplication : GlobalSplitCompatApplication()\n\n// OR\n\nimport com.jeppeman.globallydynamic.globalsplitcompat.GlobalSplitCompat\n\nclass MyApplication : Application() {\n    override fun attachBaseContext(base: Context) {\n        super.attachBaseContext(base)\n        GlobalSplitCompat.install(this)\n    }\n}\n\n// FOR INSTALLED ACTIVITIES\nclass MyActivity : AppCompatActivity() {\n    override fun attachBaseContext(base: Context) {\n        super.attachBaseContext(base)\n        GlobalSplitCompat.installActivity(this)\n    }\n}\n\\`\\`\\`\n**Installing dynamic modules**\n\\`\\`\\`kotlin\nimport com.jeppeman.globallydynamic.globalsplitinstall.*\n\nval globalSplitInstallManager: GlobalSplitInstallManager = GlobalSplitInstallManagerFactory.create(context)\n\nval request = GlobalSplitInstallRequest.newBuilder()\n    .addModule(\"my_dynamic_feature\")\n    .addLanguage(Locale.forLanguageTag(\"de\"))\n    .build()\n\nval installListener = GlobalSplitInstallUpdatedListener { state ->\n   when (state.status()) {\n       GlobalSplitInstallSessionStatus.DOWNLOADING -> // do things\n       ...\n   }\n}\n\nglobalSplitInstallManager.registerListener(installListener)\nglobalSplitInstallManager.startInstall(request)\n    .addOnSuccessListener { sessionId -> ...  }\n    .addOnFailureListener { exception -> ... }\n\\`\\`\\`\nFor more information on the client API, refer to the [Android library documentation](/docs/user/android).\n\n#### 4. Run your application\nYou can now install the base APK from an app bundle that has been produced by the Android Gradle Plugin, for example:\n* \\`./gradlew installDebug\\`\n<br/><br/>or\n* Run the app from Android Studio with the deploy option \"APK from app bundle\" selected: <div style=\"display:inline-block;height:150px;width:150px;\">![APK from bundle](${ApkFromBundle})</div>\n\nAfter a successful build, a bundle should have been uploaded to the server running inside Android Studio, if it was, \nyou should see something like the following in the GloballyDynamic Log tool window in Android Studio:\n\n![Upload log](${UploadLog})\n\nYou can then start downloading split APK:s from your android application.\n\nThe video below shows the process in action:\n\n[YouTube](https://www.youtube.com/watch?v=K6CPYHlsJt4)\n\n#### Example\nRefer to the [minimal sample of the Android lib source code](https://github.com/jeppeman/GloballyDynamic/tree/master/globallydynamic-android-lib/minimal-sample) \nfor a small app that showcases a dev setup.\n\nFor a complete production setup compatible with any app store you intend to use dynamic delivery with, such as \nGoogle Play Store, Huawei App Gallery, Amazon App Store, Samsung Galaxy Store, etc. Refer to the \n[complete setup page](/user-guide/getting-started/complete).\n`\n\nconst Development = () => {\n    return (\n        <Box>\n            <Container>\n                <ReactMarkdown\n                    escapeHtml={false}\n                    source={markdown}\n                    renderers={\n                        {\n                            code: CodeBlock,\n                            link: LinkRenderer,\n                            image: ImageRenderer\n                        }\n                    }/>\n            </Container>\n        </Box>\n    );\n}\n\nexport default Development;\n","import React from \"react\"\nimport {Box, Container} from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport CodeBlock from \"../../../components/CodeBlock\";\nimport LinkRenderer from \"../../../components/LinkRenderer\";\nimport ImageRenderer from \"../../../components/ImageRenderer\";\nimport {versions} from \"../../../constants\";\n\nconst markdown = `\n# Complete setup\n\nThis page will walk you through how to configure your project for a fully fledged production \nsetup compatible with any app store you intend to use dynamic delivery with, such as Google Play Store, \nHuawei App Gallery, Amazon App Store, Samsung Galaxy Store, etc.\n\n#### 1. Configure the \\`build.gradle\\` of your base application module\nThe Android library comes with a different artifact for each underlying app store, the way you configure which one to use\nis through build variants. \nAll of these artifacts expose an identical API to consumers, you therefore don't have to modify your code as you switch\nbetween build variants. The API pretty much mirrors that of the [Play Core Library](https://developer.android.com/guide/playcore)\n\nIn this example, configurations for Google Play Store, Huawei App Gallery, Amazon App Store and Samsung Galaxy Store are \nadded, if you do not intend to distribute through some of these channels you can just remove their respective \nconfigurations.\n\\`\\`\\`groovy\nbuildscript {\n    repositories {\n        google()\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:${versions.AGP}'\n        classpath 'com.jeppeman.globallydynamic.gradle:plugin:${versions.GRADLE}'\n    }\n}\n\napply plugin: 'com.android.application'\napply plugin: 'com.jeppeman.globallydynamic'\n\nandroid {\n    flavorDimensions 'distributionPlatform'\n    \n    // Note: these product flavors have to be present for\n    // dynamic feature modules as well since they are \n    // declaring a dependency on the app module\n    productFlavors {\n         // Google Play Store\n         gplay {\n             dimension 'distributionPlatform'\n         }\n         \n         // Huawei App Gallery\n         huawei {\n             dimension 'distributionPlatform'\n         }\n         \n         // Amazon App Store\n         amazon {\n             dimension 'distributionPlatform'\n         }\n         \n         // Samsung Galaxy Store\n         galaxy {\n             dimension 'distributionPlatform'\n         }\n    }\n    \n    // DSL from the gradle plugin in which you configure your GloballyDynamic servers\n    globallyDynamicServers {\n        // Dev server running inside Android Studio (requires the Android Studio Plugin), applied to debug variants.\n        // Note that 'serverUrl' is left intentionally empty here, when this is the case\n        // the Android Studio integrated server will be used\n        studioIntegrated {\n            // Optional: throttles the download speed of split APK:s by the amount of milliseconds given\n            throttleDownloadBy 1000 \n            \n            // The build variants that this server should be applied to,\n            // here we apply it to all debug variants. If you for instance \n            // rather would like to use internal app sharing for your Google Play\n            // variant you can just remove 'gplayDebug' from below and use\n            // the 'com.jeppeman.globallydynamic.android:gplay' artifact\n            // for all gplay variants.\n            applyToBuildVariants 'gplayDebug', 'huaweiDebug', 'amazonDebug', 'galaxyDebug' \n        }\n        \n        // A dedicated server running elsewhere, can be used to enable dynamic delivery \n        // where otherwise unavailable, e.g. Amazon App Store or Samsung Galaxy Store.\n        // If you do not intend to distribute to platforms without native support for\n        // dynamic delivery you can leave this out.\n        // Refer to the \"Running a dedicated GloballyDynamic server\" page to learn\n        // how to run one.\n        selfHosted {\n            // The address to your GloballyDynamic server\n            serverUrl 'https://my.globallydynamic.server' \n            \n            // The username to the server\n            username 'my-username' \n            \n            // The password to the server\n            password 'my-secret-password' \n            \n            // The build variants to apply this server to, in this\n            // case we want to use it to enable dynamic delivery\n            // on Amazon App Store and Samsung Galaxy Store\n            applyToBuildVariants 'amazonRelease', 'galaxyRelease'\n        }\n    }\n    \n    dynamicFeatures = [':my_dynamic_feature']\n}\n\nrepositories { \n    google()\n    mavenCentral()\n    // Needed if you are using the Huawei artifact\n    maven { url 'http://developer.huawei.com/repo' } \n}\n\n// Placeholder configurations, this is needed if you are declaring a dependency \n// that is specific to *both* a build type and a build flavor.\n// See more at https://developer.android.com/studio/build/dependencies#dependency_configurations.\nconfigurations {\n    gplayReleaseImplementation {}\n    huaweiReleaseImplementation {}\n    amazonReleaseImplementation {}\n    galaxyReleaseImplementation {}\n}\n\ndependencies {\n    // With this artifact requests will be delegated to a self hosted GloballyDynamic server,\n    // in this case and Android Studio integrated server\n    debugImplementation 'com.jeppeman.globallydynamic.android:selfhosted:${versions.ANDROID}'\n    \n    // With this artifact requests will be delegated to Play Store\n    gplayReleaseImplementation 'com.jeppeman.globallydynamic.android:gplay:${versions.ANDROID}'\n    \n    // With this artifact requests will be delegated to Huawei App Gallery\n    huaweiReleaseImplementation 'com.jeppeman.globallydynamic.android:huawei:${versions.ANDROID}'\n    \n    // Self hosted dynamic delivery for Amazon App Store\n    amazonReleaseImplementation 'com.jeppeman.globallydynamic.android:selfhosted:${versions.ANDROID}'\n    \n    // Self hosted dynamic delivery for Samsung Galaxy Store\n    galaxyReleaseImplementation 'com.jeppeman.globallydynamic.android:selfhosted:${versions.ANDROID}'\n}\n\\`\\`\\`\n\n#### 2. Integrate Android library \nThe exposed API from the Android library is the identical regardless of variant, hence you do not have to make a separate\nintegration for each app store you distribute through. <br/>The artifact applied to the variant you use will determine\nwhere to route install requests however, so for instance, \\`com.jeppeman.globallydynamic.android:gplay\\` will route to\nPlay Store, \\`com.jeppeman.globallydynamic.android:huawei\\` will route to Huawei App Gallery, and so on.\n\n\\`\\`\\`kotlin\nimport com.jeppeman.globallydynamic.globalsplitinstall.*\n\nval globalSplitInstallManager: GlobalSplitInstallManager = GlobalSplitInstallManagerFactory.create(context)\n\nval request = GlobalSplitInstallRequest.newBuilder()\n    .addModule(\"my_dynamic_feature\")\n    .addLanguage(Locale.forLanguageTag(\"de\"))\n    .build()\n\nval installListener = GlobalSplitInstallUpdatedListener { state ->\n   when (state.status()) {\n       GlobalSplitInstallSessionStatus.DOWNLOADING -> // do things\n       ...\n   }\n}\n\nglobalSplitInstallManager.registerListener(installListener)\nglobalSplitInstallManager.startInstall(request)\n    .addOnSuccessListener { sessionId -> ...  }\n    .addOnFailureListener { exception -> ... }\n\\`\\`\\`\n\n#### 3. Build your bundle\nBundles can then be built for the various variants as follows:\n* **Amazon**: \\`./gradlew bundleAmazonDebug\\`, \\`./gradlew bundleAmazonRelease\\`\n* **Galaxy**: \\`./gradlew bundleGalaxyDebug\\`, \\`./gradlew bundleGalaxyRelease\\`\n* **Google Play**: \\`./gradlew bundleGplayDebug\\`, \\`./gradlew bundleGplayRelease\\`\n* **Huawei**: \\`./gradlew bundleHuaweiDebug\\`, \\`./gradlew bundleHuaweiRelease\\`\n\nReleasing with dynamic delivery on Amazon App Store and Samsung Galaxy Store requires a little bit of a different workflow since they do not\nsupport app bundles, refer to their documentation pages [here](/user-guide/amazon-app-store) and \n[here](/user-guide/samsung-galaxy-store) for more information on the subject.\n\n### Live example\nFor an example application, refer to [Android Jetpack Playground](https://github.com/jeppeman/android-jetpack-playground);\nit is published on Google Play Store, Huawei App Gallery, Amazon App Store and Samsung Galaxy Store and leverages\ndynamic delivery on all of the platforms.<br/>\nYou can also have a look at the [android sample project](https://github.com/jeppeman/GloballyDynamic/tree/master/globallydynamic-android-lib/sample) as another example.\n`\n\nconst Complete = () => {\n    return (\n        <Box>\n            <Container>\n                <ReactMarkdown\n                    escapeHtml={false}\n                    source={markdown}\n                    renderers={\n                        {\n                            code: CodeBlock,\n                            link: LinkRenderer,\n                            image: ImageRenderer\n                        }\n                    }/>\n            </Container>\n        </Box>\n    );\n}\n\nexport default Complete;\n","import React from \"react\";\nimport {Box, Container} from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport CodeBlock from \"../../components/CodeBlock\";\nimport LinkRenderer from \"../../components/LinkRenderer\";\nimport ImageRenderer from \"../../components/ImageRenderer\";\nimport {versions} from \"../../constants\";\n\nconst markdown = `\n# Firebase App Distribution\n\nApp bundles are not supported on Firebase App Distribution either, however, enabling dynamic delivery for it is fairly \nstraightforward:\n\n1. Run a dedicated GloballyDynamic server that is reachable from your app.\n2. Configure the [Firebase App Distribution Gradle plugin](https://firebase.google.com/docs/app-distribution/android/distribute-gradle) \nto use an APK that has been stripped of on-demand modules.\n3. Build and upload the APK.\n\n### 1. Run a dedicated server\nFollow the guide [here](./server).\n\n### 2. Configure the gradle plugin\n\\`\\`\\`groovy\nbuildscript {\n    repositories {\n        google()\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:${versions.AGP}'\n        classpath 'com.jeppeman.globallydynamic.gradle:plugin:${versions.GRADLE}'\n        classpath 'com.google.firebase:firebase-appdistribution-gradle:2.0.0'\n    }\n}\n\napply plugin: 'com.android.application'\napply plugin: 'com.jeppeman.globallydynamic'\napply plugin: 'com.google.firebase.appdistribution'\n\nandroid {\n    flavorDimensions 'distributionPlatform'\n    \n    productFlavors {\n        firebase {\n            dimension 'distributionPlatform'\n            firebaseAppDistribution {\n                // The output path of the universal apk\n                apkPath \"\\${buildDir}/outputs/universal_apk/firebaseRelease/universal.apk\"\n            }\n        }\n    }\n    \n    globallyDynamicServers {\n        selfHosted {\n            serverUrl 'https://my.globallydynamic.server'\n            username 'my-username'\n            password 'my-secret-password'\n            applyToBuildVariants 'firebaseRelease'\n        }\n    }\n}\n\nconfigurations {\n    firebaseReleaseImplementation {}\n}\n\ndependencies {\n    firebaseReleaseImplementation 'com.jeppeman.globallydynamic.android:selfhosted:${versions.ANDROID}'\n}\n\\`\\`\\`\n\n### 3. Build and upload the APK\n\n**Option 1 (recommended), build a universal APK (\\`./gradlew buildUniversalApkForFirebaseRelease\\`):** this APK will include *all* code and \nresources from the application, including dynamic feature modules, both install time and on-demand. There is a way\nto exclude on-demand modules from the produced APK however; by disabling *fusing* for a dynamic feature module,\nit will be excluded from the universal APK, like so:\n\\`\\`\\`xml\n<manifest xmlns:dist=\"http://schemas.android.com/apk/distribution\"\n    package=\"com.example.myapp.feature\">\n\n    <dist:module\n        dist:instant=\"false\"\n        dist:title=\"@string/title_my_feature\">\n        <dist:delivery>\n            <dist:on-demand />\n        </dist:delivery>\n        \n        <!-- Fusing disabled -->\n        <dist:fusing dist:include=\"false\" /> \n    </dist:module>\n</manifest>\n\\`\\`\\`\nThe appealing thing about the universal APK in comparison to the others is that you do not have to call\n\\`globalSplitInstallManager.installMissingSplits()\\`, install time features are immediately available, while \non-demand modules are still downloaded dynamically.\n\n**Option 2, build a base APK (\\`./gradlew buildBaseApkForFirebaseRelease\\`)**: \nthis APK will *only* contain code and resources\nfrom the main application module, i.e. no dynamic feature modules, neither install time nor on-demand modules. Therefore install\ntime modules also become on-demand modules, i.e. they will be downloaded at runtime as they are needed. The android\nlibrary comes with a way of installing all *missing* splits, meaning missing install time modules and density/language \nmodules, this can be called immediately after application startup if you want install time modules to be readily \navailable as soon as possible:\n\\`\\`\\`kotlin\nglobalSplitInstallManager.installMissingSplits()\n    .addOnSuccessListener { startMyActivityFromInstallTimeFeature() }\n\\`\\`\\`\nWith this APK it is strongly recommended that you call this on app start since non-default assets / languages will\nbe missing from the APK.\n<br/><br/>\n**Option 3, build a bundle and a standard APK (\\`./gradlew bundleFirebaseRelease assembleFirebaseRelease\\`)**: \nthis APK will also only contain code and resources from the \nmain application module, the difference compared to the base APK is that this APK is not stripped of \nnon-default languages and assets - so somewhat less naked, if you will. With this APK it is you can also use\n\\`globalSplitInstallManager.installMissingSplits()\\` if you want install time feature to be available as soon\nas possible.\n\n\n**Publish the APK**<br/>\nFinally publish your produced APK to Firebase App Distribution like so:\n\n\\`./gradlew appDistributionUploadFirebaseRelease\\`\n\n### Live Example\nMy example project [Android Jetpack Playground](https://github.com/jeppeman/android-jetpack-playground) is \npublished on Firebase App Distribution, refer to it for a complete setup.\n`;\n\nconst FirebaseAppDistribution = () => {\n    return (\n        <Box>\n            <Container>\n                <ReactMarkdown\n                    escapeHtml={false}\n                    source={markdown}\n                    renderers={\n                        {\n                            code: CodeBlock,\n                            link: LinkRenderer,\n                            image: ImageRenderer\n                        }\n                    }/>\n            </Container>\n        </Box>\n    );\n}\n\nexport default FirebaseAppDistribution;\n\n","import React, {useEffect} from 'react';\nimport DrawerPage from \"../components/DrawerPage\"\nimport GettingStarted from \"./getting-started\"\nimport Server from \"./server\"\nimport AmazonAppStore from \"./amazon-app-store\";\nimport SamsungGalaxyStore from \"./samsung-galaxy-store\";\nimport HuaweiAppGallery from \"./huawei-app-gallery\";\nimport {useHistory, useLocation, useRouteMatch} from \"react-router\";\nimport Troubleshooting from \"./troubleshooting\";\nimport Development from \"./getting-started/development\";\nimport Complete from \"./getting-started/complete\";\nimport FirebaseAppDistribution from \"./firebase-app-distribution\";\n\nexport const userGuideDestinations = (pathPrefix: string) => ([\n    {\n        text: 'Getting started',\n        url: 'getting-started',\n        component: GettingStarted,\n        exact: true,\n        childDestinations: [\n            {\n                text: 'Development Setup',\n                url: 'getting-started/development',\n                component: Development\n            },\n            {\n                text: 'Complete Setup',\n                url: 'getting-started/complete',\n                component: Complete\n            }\n        ]\n    },\n    {\n        text: 'Running a dedicated GloballyDynamic server',\n        url: 'server',\n        component: Server\n    },\n    {\n        text: 'Dynamic Delivery for Amazon App Store',\n        url: 'amazon-app-store',\n        component: AmazonAppStore\n    },\n    {\n        text: 'Dynamic Delivery for Samsung Galaxy Store',\n        url: 'samsung-galaxy-store',\n        component: SamsungGalaxyStore\n    },\n    {\n        text: 'Dynamic Delivery for Huawei App Gallery',\n        url: 'huawei-app-gallery',\n        component: HuaweiAppGallery\n    },\n    {\n        text: 'Dynamic Delivery for Firebase App Distribution',\n        url: 'firebase-app-distribution',\n        component: FirebaseAppDistribution\n    },\n    {\n        text: 'Troubleshooting',\n        url: 'troubleshooting',\n        component: Troubleshooting\n    }\n].map(({childDestinations, ...destination}) => ({\n    pathPrefix,\n    childDestinations: childDestinations?.map(childDestination => ({\n        pathPrefix,\n        ...childDestination\n    })),\n    ...destination\n})));\n\nconst UserGuide = () => {\n    const match = useRouteMatch();\n    const history = useHistory();\n    const location = useLocation();\n\n    useEffect(() => {\n        if (location.pathname === \"/user-guide\") {\n            history.replace(\"/user-guide/getting-started/development\")\n        }\n    }, [location]);\n\n    useEffect(() => {\n        document.documentElement.scrollTop = 0;\n    });\n\n    return (\n        <DrawerPage destinations={userGuideDestinations(match.path)}/>\n    );\n}\n\nexport default UserGuide;\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {HeaderLocation} from \"./index\";\nimport {AppBar, Box, Container, IconButton, Tab, Tabs, Typography} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {pageNames} from \"../../constants\";\nimport {ArrowForwardIos, GitHub} from \"@material-ui/icons\";\nimport {useLocation} from \"react-router\";\nimport {Variant} from \"@material-ui/core/styles/createTypography\";\n\nconst useStyles = makeStyles(theme => ({\n    icon: {\n        fill: theme.palette.text.secondary,\n        width: \"1em\",\n        height: \"1em\",\n        display: \"inline-block\",\n        fontSize: \"1.5rem\",\n        transition: \"fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        flexShrink: 0,\n        userSelect: \"none\"\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    appBarContent: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    githubButton: {\n        marginLeft: \"auto\",\n    },\n    githubIcon: {\n        fill: \"#ddd\"\n    },\n    drawer: {\n        width: '100%',\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: '100%',\n    },\n    toolbar: theme.mixins.toolbar,\n    listItem: {\n        color: theme.palette.text.secondary,\n        '&.selected': {\n            color: theme.palette.text.hint\n        }\n    },\n    listIcon: {\n        fill: theme.palette.text.secondary,\n        '&.selected': {\n            fill: theme.palette.text.hint\n        }\n    },\n    arrow: {\n        fill: theme.palette.text.secondary,\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n    },\n    tabPanel: {\n        paddingTop: theme.spacing(5),\n        paddingBottom: theme.spacing(5),\n        background: theme.palette.primary.dark,\n        color: theme.palette.text.secondary,\n    },\n}));\n\nfunction a11yProps(index: number) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    className?: string;\n    style: any;\n    index: any;\n    value: any;\n    variant: Variant;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Container>\n                    <Typography style={{\n                        fontSize: '2.5em',\n                        fontWeight: 400,\n                        letterSpacing: 0.00735,\n                        lineHeight: 1.235\n                    }} variant={props.variant}>{children}</Typography>\n                </Container>\n            )}\n        </div>\n    );\n}\n\nexport type DesktopProps = {\n    selectedLocation?: HeaderLocation;\n    locations: HeaderLocation[];\n};\n\nconst Desktop = ({selectedLocation, locations}: DesktopProps) => {\n    const [marginTop, setMarginTop] = useState(0);\n    const appBarRef = useRef<HTMLElement>(null)\n    const location = useLocation();\n    const locationText = selectedLocation ? selectedLocation.text : \"\";\n    const tabIndex = locations.findIndex(item => item.text === locationText)\n    const classes = useStyles();\n    const panelTextFromPath = pageNames[location.pathname]\n        ? <div>\n            {\n                pageNames[location.pathname].map((text, index) =>\n                    <span key={index}>{`${text}`}{index < pageNames[location.pathname].length - 1 ?\n                        <ArrowForwardIos className={classes.arrow}/> : <></>}</span>)\n            }\n        </div>\n        : null;\n\n    useEffect(() => {\n        const newMarginTop = appBarRef.current?.clientHeight || 0;\n        if (newMarginTop > marginTop) {\n            setMarginTop(newMarginTop)\n        }\n    });\n\n    return (\n        <>\n            <AppBar position=\"fixed\" ref={appBarRef}>\n                <Container>\n                    <div className={classes.appBarContent}>\n                        <Tabs value={tabIndex}>\n                            {locations.map(({title, text, icon, url}, index) => {\n                                return (\n                                    <Tab label={title}\n                                         key={index}\n                                         icon={icon}\n                                         to={{pathname: url, state: {from: location.pathname}}}\n                                         {...a11yProps(index)}\n                                         component={tabIndex === index ? \"div\" : Link}/>\n                                )\n                            })}\n                        </Tabs>\n                        <IconButton\n                            className={classes.githubButton}\n                            href=\"https://github.com/jeppeman/GloballyDynamic\"\n                            target=\"_blank\"\n                            component=\"a\">\n                            <GitHub className={classes.githubIcon}/>\n                        </IconButton>\n                    </div>\n                </Container>\n            </AppBar>\n            {locations.map(({text}, index) =>\n                <TabPanel key={index}\n                          variant={selectedLocation?.url === '/' ? 'h1' : 'h4'}\n                          className={classes.tabPanel}\n                          value={tabIndex}\n                          style={{marginTop: marginTop}}\n                          index={index}>{panelTextFromPath || text}</TabPanel>)}\n        </>\n    );\n};\n\nexport default Desktop;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M2.688 7.313 l 26.625 0 l 0 2.688 l -26.625 0 z\"\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  id: \"icon_menu_top\",\n  fill: \"freeze\",\n  attributeName: \"d\",\n  dur: \"0.2s\",\n  keyTimes: \"0;1\",\n  values: \"M2.688 7.313 l 26.625 0 l 0 2.688 l -26.625 0 z; M2.688 7.313 l 14.16 14.1 l -1.9 1.9 l -14.16 -14.1 z\"\n})), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M2.688 23.313 l 26.625 0 l 0 -2.688 l -26.625 0 z\"\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  fill: \"freeze\",\n  attributeName: \"d\",\n  dur: \"0.2s\",\n  keyTimes: \"0;1\",\n  values: \"M2.688 23.313 l 26.625 0 l 0 -2.688 l -26.625 0 z; M2.688 23.313 l 14.1 -14.1 l -1.9 -1.9 l -14.1 14.1 z\"\n})), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M2.688 14h26.625v2.688h-26.625v-2.688z\"\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  dur: \"0.2s\",\n  fill: \"freeze\",\n  attributeName: \"fill-opacity\",\n  from: 1,\n  to: 0\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  dur: \"0.2s\",\n  fill: \"freeze\",\n  attributeName: \"d\",\n  keyTimes: \"0;1\",\n  values: \"M2.688 14h26.625v2.688h-26.625v-2.688z; M2.688 14h0v2.688h0v-2.688z\"\n})));\n\nvar SvgMenuOpened = function SvgMenuOpened(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 32 32\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgMenuOpened, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/menu_opened.ff754338.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M2.688 7.313 l 14.16 14.1 l -1.9 1.9 l -14.16 -14.1 z\"\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  id: \"icon_menu_top\",\n  fill: \"freeze\",\n  attributeName: \"d\",\n  dur: \"0.2s\",\n  keyTimes: \"0;1\",\n  values: \"M2.688 7.313 l 14.16 14.1 l -1.9 1.9 l -14.16 -14.1 z; M2.688 7.313 l 26.625 0 l 0 2.688 l -26.625 0 z\"\n})), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M2.688 23.313 l 14.1 -14.1 l -1.9 -1.9 l -14.1 14.1 z\"\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  fill: \"freeze\",\n  attributeName: \"d\",\n  dur: \"0.2s\",\n  keyTimes: \"0;1\",\n  values: \"M2.688 23.313 l 14.1 -14.1 l -1.9 -1.9 l -14.1 14.1 z; M2.688 23.313 l 26.625 0 l 0 -2.688 l -26.625 0 z\"\n})), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M2.688 14h0v2.688h0v-2.688z\"\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  dur: \"0.2s\",\n  fill: \"freeze\",\n  attributeName: \"fill-opacity\",\n  from: 0,\n  to: 1\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  dur: \"0.2s\",\n  fill: \"freeze\",\n  attributeName: \"d\",\n  keyTimes: \"0;1\",\n  values: \"M2.688 14h0v2.688h0v-2.688z; M2.688 14h26.625v2.688h-26.625v-2.688z\"\n})));\n\nvar SvgMenuClosed = function SvgMenuClosed(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 32 32\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgMenuClosed, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/menu_closed.031f4618.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useEffect, useRef, useState} from \"react\";\nimport {\n    AppBar,\n    Box,\n    Drawer,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Toolbar,\n    Typography,\n    useTheme\n} from \"@material-ui/core\";\nimport {ReactComponent as MenuOpened} from \"../../assets/menu_opened.svg\";\nimport {ReactComponent as MenuClosed} from \"../../assets/menu_closed.svg\";\nimport {Link, useRouteMatch} from \"react-router-dom\";\nimport NestedNavListItem from \"../NestedNavListItem\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {HeaderLocation} from \"./index\";\nimport {useLocation} from \"react-router\";\nimport {ExpandLess, ExpandMore} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(theme => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        color: theme.palette.text.secondary,\n        flexGrow: 1,\n        fontSize: '1.4285714285714284rem',\n        fontWeight: 500,\n        lineHeight: 1.6,\n        letterSpacing: '0.0075rem'\n    },\n    icon: {\n        fill: theme.palette.text.secondary,\n        width: \"1em\",\n        height: \"1em\",\n        display: \"inline-block\",\n        fontSize: \"1.5rem\",\n        transition: \"fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        flexShrink: 0,\n        userSelect: \"none\"\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n        transition: \"max-height 250ms linear\",\n        width: '100%',\n        flexShrink: 0,\n        overflow: \"hidden\",\n        padding: 0\n    },\n    drawerPaper: {\n        width: '100%',\n    },\n    toolbar: theme.mixins.toolbar,\n    listItem: {\n        color: theme.palette.text.secondary,\n        '&.selected': {\n            color: theme.palette.text.hint\n        }\n    },\n    listIcon: {\n        fill: theme.palette.text.secondary,\n        '&.selected': {\n            fill: theme.palette.text.hint\n        }\n    },\n    expand: {\n        alignSelf: 'flex-end',\n        color: theme.palette.text.secondary,\n        marginRight: theme.spacing(4)\n    }\n}));\n\nexport type MobileProps = {\n    selectedLocation?: HeaderLocation;\n    locations: HeaderLocation[];\n}\n\nconst MOBILE_ROOT_TITLE = 'GloballyDynamic'\n\ntype DrawerListItemProps = {\n    location: HeaderLocation;\n    setTitle: (title: string) => void;\n    setDrawerOpen: (open: boolean) => void;\n}\n\nconst DrawerListItem = ({setDrawerOpen, setTitle, location: {text, title, icon, url, destinations}}: DrawerListItemProps) => {\n    const location = useLocation();\n    const theme = useTheme();\n    const classes = useStyles();\n    const match = useRouteMatch();\n    const [subListHeight, setSubListHeight] = useState(0);\n    const selected = (url === '/' && url === location.pathname)\n        || (url !== '/' && location.pathname.indexOf(url) !== -1);\n    const nestedPathSelected = (!(!!url) && match.path === location.pathname)\n        || (!!url && location.pathname.indexOf(url) !== -1);\n\n    const [open, setOpen] = useState(selected || nestedPathSelected);\n    const subListRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        const newHeight = subListRef.current?.clientHeight || 0;\n        if (newHeight > subListHeight) {\n            setSubListHeight(newHeight)\n        }\n    });\n\n    useEffect(() => {\n        setDrawerOpen(false);\n        setOpen(selected || nestedPathSelected);\n    }, [location.pathname]);\n\n    return (\n        <ListItem button\n                  key={text}\n                  selected={selected}\n                  component={!destinations ? Link : \"div\"}\n                  to={{pathname: url, state: {from: location.pathname}}}\n                  style={{\n                      paddingLeft: 0,\n                      paddingRight: 0,\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'flex-start'\n                  }}\n                  replace={selected}\n                  onClick={() => {\n                      if (!destinations) {\n                          setTitle(url === '/' ? MOBILE_ROOT_TITLE : text);\n                          setDrawerOpen(false)\n                      } else {\n                          setOpen(!open);\n                      }\n                  }}>\n            <Box style={{display: 'flex', flexDirection: 'row', width: '100%'}}>\n                <ListItemIcon\n                    style={{marginLeft: theme.spacing(2)}}>{React.cloneElement(icon, {className: `${classes.listIcon}${selected && !destinations ? ' selected' : ''}`})}</ListItemIcon>\n                <ListItemText primary={title}\n                              className={`${classes.listItem}${selected && !destinations ? ' selected' : ''}`}/>\n                {\n                    destinations ?\n                        open\n                            ? <ExpandLess className={classes.expand}/>\n                            : <ExpandMore className={classes.expand}/>\n                        : <></>\n                }\n            </Box>\n            {\n                destinations\n                    ? <List component=\"nav\"\n                            ref={subListRef}\n                            style={{\n                                maxHeight: open && subListHeight > 0\n                                    ? subListHeight\n                                    : subListHeight <= 0\n                                        ? 'auto'\n                                        : 0\n                            }}\n                            className={classes.drawer}>\n                        {destinations.map(destination =>\n                            <NestedNavListItem key={destination.url}\n                                               indent={theme.spacing(6)}\n                                               navigateOnParentMenuClick={!(!!destination.childDestinations)}\n                                               destination={destination}/>)}\n                    </List>\n                    : <></>\n            }\n        </ListItem>\n    );\n};\n\nconst Mobile = ({selectedLocation, locations}: MobileProps) => {\n    const [title, setTitle] = useState(\"\");\n    const [open, setOpen] = useState(false);\n    const classes = useStyles();\n    const locationText = selectedLocation\n        ? selectedLocation.url === '/'\n            ? MOBILE_ROOT_TITLE\n            : selectedLocation.text\n        : \"\";\n\n    if (locationText && locationText !== title) {\n        setTitle(locationText)\n    }\n\n    return (\n        <>\n            <AppBar className={classes.appBar} position=\"fixed\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n                                onClick={() => setOpen(!open)}>\n                        {\n                            open\n                                ? <MenuOpened className={classes.icon}/>\n                                : <MenuClosed className={classes.icon}/>\n                        }\n                    </IconButton>\n                    <Typography variant={selectedLocation?.url === '/' ? \"h1\" : \"h6\"} className={classes.title}>\n                        {title}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant={\"persistent\"}\n                classes={{paper: classes.drawerPaper}}\n                open={open}>\n                <div className={classes.toolbar}/>\n                <List>\n                    {locations.map(location => <DrawerListItem key={location.url}\n                                                               setTitle={setTitle}\n                                                               setDrawerOpen={setOpen}\n                                                               location={location}/>)}\n                </List>\n            </Drawer>\n        </>\n    );\n};\n\nexport default Mobile;\n","import React, {ReactElement, useEffect} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Description, Home, NewReleases, School} from \"@material-ui/icons\";\nimport {useHistory, useLocation} from \"react-router\";\nimport {CssBaseline, useMediaQuery} from \"@material-ui/core\";\nimport {documentationDestinations} from \"../../documentation\";\nimport {userGuideDestinations} from \"../../userguide\";\nimport {DrawerPageDestination} from \"../DrawerPage\";\nimport Desktop from \"./Desktop\";\nimport Mobile from \"./Mobile\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        flexGrow: 1,\n        flexDirection: 'column'\n    },\n}));\n\nexport type HeaderLocation = {\n    title: string;\n    text: string;\n    icon: ReactElement;\n    url: string\n    destinations?: DrawerPageDestination[];\n};\n\nconst locations = [\n    {\n        title: 'Home',\n        text: 'GloballyDynamic',\n        icon: <Home/>,\n        url: '/'\n    },\n    {\n        title: 'Docs',\n        text: 'Docs',\n        icon: <Description/>,\n        url: '/docs',\n        destinations: documentationDestinations('/docs')\n    },\n    {\n        title: 'User Guide',\n        text: 'User Guide',\n        icon: <School/>,\n        url: '/user-guide',\n        destinations: userGuideDestinations('/user-guide')\n    },\n    {\n        title: 'Release notes',\n        text: 'Release notes',\n        icon: <NewReleases />,\n        url: '/release-notes'\n    }\n];\n\nconst Header = () => {\n    const minWidth600 = useMediaQuery('(min-width:600px)');\n    const location = useLocation();\n    const history = useHistory();\n    const classes = useStyles();\n    const selectedLocation = locations.find(loc =>\n        (loc.url === '/' && loc.url === location.pathname)\n        || (loc.url !== '/' && location.pathname.indexOf(loc.url) !== -1));\n\n    useEffect(() => {\n        if (location.pathname !== \"/\" && location.pathname.endsWith(\"/\")) {\n            history.replace(location.pathname.substr(0, location.pathname.length - 1))\n        }\n    });\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n            {minWidth600\n                ? <Desktop selectedLocation={selectedLocation} locations={locations}/>\n                : <Mobile selectedLocation={selectedLocation} locations={locations}/>\n            }\n        </div>\n    )\n}\n\nexport default Header;\n","import React from \"react\";\nimport {Box, Container} from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport CodeBlock from \"../components/CodeBlock\";\nimport LinkRenderer from \"../components/LinkRenderer\";\nimport ImageRenderer from \"../components/ImageRenderer\";\n\nconst markdown = `\nAndroid library 1.1.1 (June 2022)\n---\n* Android 12 (API level 31 and 32) support.\n* Bumped Play Core to 1.10.3.\n* Bumped Dynamic Ability to 1.0.17.300.\n\nStudio plugin 1.5.0 (June 2022)\n---\n* Android Studio Chipmunk compatibility.\n* Bumped GloballyDynamic server to 1.2.0.\n\nGradle plugin 1.4.0 (June 2022)\n---\n* AGP 7.2.1 compatibility.\n\nNote: This version breaks compatibility with AGP 7.0.0 and below.\n\nServer 1.2.0 (June 2022)\n---\n* Bumped bundletool to 1.10.0.\n* Fixed the address of GloballyDynamic server; made it configurable and made it so that the default value returns the correct address on the network.\n\nStudio plugin 1.4.0 (February 2022)\n---\n* Android Studio Bumblebee compatibility.\n\nGradle plugin 1.3.0 (August 2021)\n---\n* AGP 7.0.0 compatibility\n\nStudio plugin 1.3.0 (August 2021)\n---\n* Android Studio Arctic Fox compatibility.\n* Bump GloballyDynamic Server to 1.1.0\n\nServer 1.1.0 (August 2021)\n---\n* Bump dependencies\n\nGradle plugin 1.2.1 (May 2021)\n---\n* Fix broken APK producer tasks when using AGP 4.2.0.\n\nStudio plugin 1.2.0 (January 2021)\n---\n* Android Studio 4.2 compatibility.\n\nGradle plugin 1.2.0 (January 2021)\n---\n* AGP 4.2 compatibility.\n\nNote: This version breaks compatibility with AGP 4.1 and below.\n\nStudio plugin 1.1.0 (October 2020)\n---\n* Android Studio 4.1 compatibility.\n\nGradle plugin 1.1.0 (October 2020)\n---\n* AGP 4.1 compatibility.\n`;\n\nconst ReleaseNotes = () => {\n    return (\n        <Box>\n            <Container>\n                <ReactMarkdown\n                    escapeHtml={false}\n                    source={markdown}\n                    renderers={\n                        {\n                            code: CodeBlock,\n                            link: LinkRenderer,\n                            image: ImageRenderer\n                        }\n                    }/>\n            </Container>\n        </Box>\n    )\n}\n\nexport default ReleaseNotes;\n","import React, {useEffect} from 'react';\nimport './App.scss';\nimport {Route, Switch, useLocation} from \"react-router\";\nimport {Box, useMediaQuery} from \"@material-ui/core\";\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\nimport Home from \"./home\"\nimport Documentation from \"./documentation\"\nimport UserGuide from \"./userguide\"\nimport Header from \"./components/header\"\nimport NotFound from \"./components/NotFound\"\nimport ReactGA from \"react-ga\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {pageNames} from \"./constants\";\nimport ReleaseNotes from \"./release-notes\";\n\nconst useStyles = makeStyles(theme => {\n    const headerStyles = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].reduce((acc, curr) => ({\n        ...acc,\n        [`& ${curr}`]: {\n            marginBottom: theme.spacing(4),\n            marginTop: theme.spacing(4),\n            ...(curr === 'h1' ? {fontSize: '1.7em'} : {})\n        }\n    }), {})\n    return {\n        root: {\n            '&.mobile': {\n                marginTop: 64,\n            },\n            '& a': {\n                color: '#0000ff'\n            },\n            '& div.transition-group': {\n                position: 'relative'\n            },\n            '& section.route-section': {\n                position: 'absolute',\n                width: '100%',\n                top: 0,\n                left: 0\n            },\n            ...headerStyles\n        }\n    }\n});\n\nconst App = () => {\n    const classes = useStyles();\n    const location = useLocation();\n    const minWidth600 = useMediaQuery('(min-width:600px)');\n    const pathSegments = location.pathname.split(\"/\");\n\n    useEffect(() => {\n        const pageName = pageNames[location.pathname];\n        ReactGA.pageview(location.pathname, undefined, pageName ? pageName.join(\" > \") : undefined);\n    }, [location.pathname]);\n\n    return (\n        <Box height=\"100%\">\n            <Header/>\n            <Box width=\"100%\"\n                 className={`${classes.root}${!minWidth600 ? ' mobile' : ''}`}>\n                <TransitionGroup className=\"transition-group\">\n                    <CSSTransition key={pathSegments[1]} classNames={\"fade\"} timeout={250}>\n                        <section className=\"route-section\">\n                            <Switch location={location}>\n                                <Route exact path='/' component={Home}/>\n                                <Route path='/docs' component={Documentation}/>\n                                <Route path='/user-guide' component={UserGuide}/>\n                                <Route path='/release-notes' component={ReleaseNotes}/>\n                                <Route component={NotFound}/>\n                            </Switch>\n                        </section>\n                    </CSSTransition>\n                </TransitionGroup>\n            </Box>\n        </Box>\n    )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport theme from './theme';\nimport ReactGA from 'react-ga';\n\nReactGA.initialize(\"UA-151430677-1\", {\n    debug: process\n        && process.env\n        && (process.env.NODE_ENV !== \"production\")\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <ThemeProvider theme={theme}>\n                <App/>\n            </ThemeProvider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/tool_window.a0f21137.png\";"],"sourceRoot":""}